//**********************************************************************************************************************
//
//                                                 irq_jobqueue.c
//
//**********************************************************************************************************************
//
//                                      Copyrights(c) 2022 by KNORR-BREMSE,
//                                 Systeme fuer Schienenfahrzeuge GmbH, Muenchen
//
//! @project  IBC
//! @date     2023-11-30
//! @author   C. Brancolini
//
//**********************************************************************************************************************
//
//! @file
//! @brief  SCIOPTA interrupt handling of job queue events
//
//**********************************************************************************************************************
// Date        Author      Changes:
// 2013-03-13  W. Eckerl   Initial revision
// 2013-04-15  W. Eckerl   Retrieve own process id with sc_procIdGet()
// 2016-07-08  N.dindugala Lint cleanup ( (Lint 9 / MISRA 2012): Note 9027
// 2017-01-13  S. Kumbhar  Added sciopta_sc header file
// 2017-04-13  G Badve     Added P_INT_JQ_ASSIST_8,9
// 2018-01-10  S. Kumbhar  Service OS updated as per Coding guidelines
// 2023-01-09  J. Lulli    Coding guidelines alignment
// 2023-05-12  C. Brancolini  Lint clean up
// 2023-11-30  C. Brancolini  Lint Plus clean up
//
//**********************************************************************************************************************

//**************************************** Compiler options ( #pragma ) ************************************************

//**************************************** Header / include files ( #include ) *****************************************
#include "os_s.h"
#include "std_defs.h"
#include "55xxirq.h"
#include "sciopta_sc.h"

//**************************************** Constant / macro definitions ( #define ) ************************************
#define IRQ_HARDWARE_GENERATED         ((S8)0)
#define IRQ_FIRST_GENERATED            ((S8)-1)

//********************************************* Type definitions ( typedef ) *******************************************

//******************************************* Global scope data definitions ********************************************

//************************************* Global scope read only definitions ( const ) ***********************************

//***************************************** Module scope data segment ( static ) ***************************************

//*********************************** Module scope read only variables ( static const ) ********************************

//************************************** Module scope func/proc prototypes ( static )***********************************

//** EndOfHeader *******************************************************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_0) ************************************************************************
//          Interrupt process of job queue assistance channel 0
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_0, src)//lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel0 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel0 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel0 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel0);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel0 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel0 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel0 = TRUE;
      }
    }else
    {
    	//  No action: interrupt not generated by hardware or process creation
    }
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_0) *******************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_1) ************************************************************************
//          Interrupt process of job queue assistance channel 1
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_1, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
	//************************** Local data declaration **************************
	S32             s32Result;
	sc_pid_t        cPid; // @suppress("Wrong derived data type")

	//************************** Static data declaration *************************
	static BOOLEAN  boInterruptValidJobQueueAssistanceChannel1 = FALSE;
	static U16      u16InterruptVectorJobQueueAssistanceChannel1 = 0;

	//************************** Function Code ***********************************
	if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
			(boInterruptValidJobQueueAssistanceChannel1 == (BOOLEAN)TRUE))
	{
		// Call ISR of atomic interrupt
		s32Result =
				s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel1);
		// Error on interrupt execution
		if (s32Result < 0L)
		{
			// Set interrupt as invalid - suppress interrupt processing
			boInterruptValidJobQueueAssistanceChannel1 = FALSE;
		}
	}
	else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
	{
		// Get own process ID
		cPid = sc_procIdGet("", SC_NO_TMO);
		if (cPid != SC_ILLEGAL_PID)
		{
			// Get interrupt vector
			u16InterruptVectorJobQueueAssistanceChannel1 =
					(U16)sc_procVectorGet(cPid);
			// Initialize interrupt as valid
			boInterruptValidJobQueueAssistanceChannel1 = TRUE;
		}
	}
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_1) *******************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_2) ************************************************************************
//          Interrupt process of job queue assistance channel 2
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_2, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
	//************************** Local data declaration **************************
	S32             s32Result;
	sc_pid_t        cPid; // @suppress("Wrong derived data type")

	//************************** Static data declaration *************************
	static BOOLEAN  boInterruptValidJobQueueAssistanceChannel2 = FALSE;
	static U16      u16InterruptVectorJobQueueAssistanceChannel2 = 0;

	//************************** Function Code ***********************************
	if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
			(boInterruptValidJobQueueAssistanceChannel2 == (BOOLEAN)TRUE))
	{
		// Call ISR of atomic interrupt
		s32Result =
				s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel2);
		// Error on interrupt execution
		if (s32Result < 0L)
		{
			// Set interrupt as invalid - suppress interrupt processing
			boInterruptValidJobQueueAssistanceChannel2 = FALSE;
		}
	}
	else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
	{
		// Get own process ID
		cPid = sc_procIdGet("", SC_NO_TMO);
		if (cPid != SC_ILLEGAL_PID)
		{
			// Get interrupt vector
			u16InterruptVectorJobQueueAssistanceChannel2 =
					(U16)sc_procVectorGet(cPid);
			// Initialize interrupt as valid
			boInterruptValidJobQueueAssistanceChannel2 = TRUE;
		}
	}
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_2) *******************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_3) ************************************************************************
//          Interrupt process of job queue assistance channel 3
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_3, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel3 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel3 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel3 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel3);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel3 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel3 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel3 = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_3) *******************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_4) ************************************************************************
//          Interrupt process of job queue assistance channel 4
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_4, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel4 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel4 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel4 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel4);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel4 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel4 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel4 = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_4) *******************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_5) ************************************************************************
//          Interrupt process of job queue assistance channel 5
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_5, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel5 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel5 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel5 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel5);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel5 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel5 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel5 = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_5) *******************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_6) ************************************************************************
//          Interrupt process of job queue assistance channel 6
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_6, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel6 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel6 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel6 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel6);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel6 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel6 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel6 = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_6) *******************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_ASSIST_7) ************************************************************************
//          Interrupt process of job queue assistance channel 7
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_ASSIST_7, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel7 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel7 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel7 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel7);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel7 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel7 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel7 = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_ASSIST_7) *******************************************************************

//** Function SC_INT_PROCESS(P_INT_JQ_ASSIST_8, src) *******************************************************************
//          Interrupt process of job queue assistance channel 8
//**********************************************************************************************************************
SC_INT_PROCESS(P_INT_JQ_ASSIST_8, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel8 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel8 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel8 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel8);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel8 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel8 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel8 = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction SC_INT_PROCESS(P_INT_JQ_ASSIST_8) *******************************************************************

//** Function SC_INT_PROCESS(P_INT_JQ_ASSIST_9, src) *******************************************************************
//          Interrupt process of job queue assistance channel 9
//**********************************************************************************************************************
SC_INT_PROCESS(P_INT_JQ_ASSIST_9, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueAssistanceChannel9 = FALSE;
  static U16      u16InterruptVectorJobQueueAssistanceChannel9 = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueAssistanceChannel9 == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueAssistanceChannel9);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueAssistanceChannel9 = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueAssistanceChannel9 =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueAssistanceChannel9 = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction SC_INT_PROCESS(P_INT_JQ_ASSIST_9) *******************************************************************


//** Function OS_INT_PROCESS(P_INT_JQ_MAIN_B) **************************************************************************
//          Interrupt process of job queue main channel B
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_MAIN_B, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueMainChannelB = FALSE;
  static U16      u16InterruptVectorJobQueueMainChannelB = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueMainChannelB == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueMainChannelB);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueMainChannelB = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueMainChannelB =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueMainChannelB = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_MAIN_B) *********************************************************************

//** Function OS_INT_PROCESS(P_INT_JQ_MAIN_D) **************************************************************************
//          Interrupt process of job queue main channel D
//**********************************************************************************************************************
OS_INT_PROCESS(P_INT_JQ_MAIN_D, src) //lint !e970 !e957 Issues related to a GenMPC55xx // @suppress("Wrong prefix")
{
//************************** Local data declaration **************************
  S32             s32Result;
  sc_pid_t        cPid; // @suppress("Wrong derived data type")

//************************** Static data declaration *************************
  static BOOLEAN  boInterruptValidJobQueueMainChannelD = FALSE;
  static U16      u16InterruptVectorJobQueueMainChannelD = 0;

//************************** Function Code ***********************************
  if ((src == IRQ_HARDWARE_GENERATED) &&                     // Generated by hardware
      (boInterruptValidJobQueueMainChannelD == (BOOLEAN)TRUE))
    {
    // Call ISR of atomic interrupt
    s32Result =
      s32IrqAtomicInterruptExecute(u16InterruptVectorJobQueueMainChannelD);
    // Error on interrupt execution
    if (s32Result < 0L)
      {
      // Set interrupt as invalid - suppress interrupt processing
      boInterruptValidJobQueueMainChannelD = FALSE;
      }
    }
  else if (src == IRQ_FIRST_GENERATED)                   // Generated when process created
    {
    // Get own process ID
    cPid = sc_procIdGet("", SC_NO_TMO);
    if (cPid != SC_ILLEGAL_PID)
      {
      // Get interrupt vector
      u16InterruptVectorJobQueueMainChannelD =
        (U16)sc_procVectorGet(cPid);
      // Initialize interrupt as valid
      boInterruptValidJobQueueMainChannelD = TRUE;
      }
    }
	else
	{
		//  No action: interrupt not generated by hardware or process creation
	}
}
//** EndOfFunction OS_INT_PROCESS(P_INT_JQ_MAIN_D) *********************************************************************

//** EndOfFile irq_jobqueue.c ******************************************************************************************
