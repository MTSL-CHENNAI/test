                                  1 	#$$eb
                                  2 	#$$sz 0		- Size opt info
                                  3 	#$$ss 0		- XO option
                                  4 	#$$fp 0		- Floating point mode
                                  5 	#$$m2		- PowerPC mnemonics
                                  6 	#$$pPPC	- PowerPC instructions
                                  7 	#$$oPPC5554	 - Optimized for PowerPC PPC5554
                                  8 	#$$ko 1
                                  9 		.file		"diagdsmnvmem.c"
                                 10 	#$$dg 1
                                 11 	# -X user configurable options:
                                 12 	#$$x X7=1 X8=1 X10=1 X11=1 X12=1 X15=2 X16=20 X18=4
                                 13 	#$$x X19=10 X20=21093 X23=1 X27=1048576 X32=2 X33=3328 X36=1 X39=5554
                                 14 	#$$x X46=1 X48=1 X55=7 X56=1 X57=2 X74=255 X78=4 X83=3
                                 15 	#$$x X84=-2 X86=3 X91=1 X93=4 X115=32767 X119=44 X146=6 X147=3
                                 16 	#$$x X153=2 X154=12582977 X175=65535 X179=1 X180=20 X191=1 X422=10000000 X423=6000000
                                 17 	#$$x X424=300000 X428=1 X446=1 X450=1 X459=64
                                 18 		.section	.PPC.EMB.apuinfo,,@note
  00000000 01  0000 0008         19 		.4byte		8
  00000004 01  0000 0008         20 		.4byte		0+4+4
  00000008 01  0000 0002         21 		.4byte		2
  0000000c 01  4150 5569 6e66    22 		.byte		"APUinfo"
  00000012 01  6f                   	
  00000013 01  00                23 		.byte		0
                                 24 		.align		2
  00000014 01  0100 0001         25 		.4byte		0x01000001
  00000018 01  0040 0001         26 		.4byte		0x00400001
                                 27 		.text
                                 28 		.section	.debug_line,,n
                                 29 	.L8:
                                 30 		.text
                                 31 	#$$ld
                                 32 	.L4:
  00000000 00                    33 		.0byte		.L2
  00000000 02  0000 04b4 0002    34 		.d2_line_start	.debug_line
  00000006 02  0000 0013 0401       	
  0000000c 02  ff04 0d00 0101       	
  00000012 02  0101 0000 0001       	
  00000018 02  0000 0100 00         	
                                 35 		.text
                                 36 	# S16 s16DiagDsmAlNvMem_init(const U32 u32DiagDsmNvMemFormatVersion)
                                 37 	# {
                                 38 		.align		2
                                 39 		.text
  0000001d 02  001f 032e 2e5c    40 		.d2file		"..\\source\\diagdsmnvmem.c"
  00000023 02  5c73 6f75 7263       	
  00000029 02  655c 5c64 6961       	
  0000002f 02  6764 736d 6e76       	
  00000035 02  6d65 6d2e 6300       	
  0000003b 02  0000                 	
  00000040 02  0005 0200 0000    41 	        .d2line         126
  00000046 02  0003 fd00 0e         	
                                 42 	#$$ld
                                 43 	.L298:
                                 44 	
                                 45 	#$$bf	s16DiagDsmAlNvMem_init,interprocedural,rasave,nostackparams
                                 46 		.globl		s16DiagDsmAlNvMem_init
  00000000 04  0000 0024 0000    47 		.d2_cfa_start	__cie
  00000006 04  0000 0000 0000       	
  0000000c 04  0000 00a0            	
                                 48 	s16DiagDsmAlNvMem_init:
  00000000 00  3d60 0000         49 		addis		r11,0,__RTC_SP_LIMIT@ha
  00000004 00  3981 fef0         50 		addi		r12,r1,-272
  00000008 00  816b 0000         51 		lwz		r11,__RTC_SP_LIMIT@l(r11)
  0000000c 00  7c0c 5840         52 		cmpl		0,0,r12,r11
  00000010 00  40a0 0010         53 		bc		5,0,.L313
  00000014 00  7d68 02a6         54 		mfspr		r11,8
  00000018 00  4800 0001         55 		bl		__sp_grow_s
  0000001c 00  7d68 03a6         56 		mtspr		lr,r11
                                 57 	.L313:
  00000020 00  9421 ffe0         58 		stwu		r1,-32(r1)		
  00000010 04  490e 20           59 		.d2_cfa_def_cfa_offset	32
  00000024 00  7c08 02a6         60 		mfspr		r0,lr
  00000028 00  93e1 001c         61 		stw		r31,28(r1)		# offset r1+28  0x1c
  00000013 04  429f 04           62 		.d2_cfa_offset_list	31,31,4,-2
  0000002c 00  9001 0024         63 		stw		r0,36(r1)
  00000016 04  4111 6c7f         64 		.d2_cfa_offset    108,-1
  00000030 00  7c7f 1b78         65 		mr		r31,r3		# u32DiagDsmNvMemFormatVersion=r31
  0000004b 02  0005 0200 0000    66 		.d2prologue_end
  00000051 02  000a                 	
                                 67 	#     S16 s16Ret;
                                 68 	#     E_NVM_OPERATION_STATUS eStatus = eNVM_STATUS_OPERATION_INIT;    // local variable for 
                                    	operation status
  00000053 02  0005 0200 0000    69 		.d2line		128
  00000059 02  0010                 	
                                 70 	.Llo1:
  00000034 00  3860 0000         71 		diab.li		r3,0
  0000005b 02  0005 0200 0000    72 		.d2line		131
  00000061 02  0003 030e            	
  00000038 00  3c80 0000         73 		addis		r4,0,u8DSM_MyPoffUsrArea@ha
                                 74 	# 
                                 75 	#     // Get all DSM data in cDiagDsmAlData from NV memory
                                 76 	#     s16Ret = s16NVM_ReadData(NVM_DEVICE_ID0,  // Device ID for accessing NVM
  0000003c 00  9061 0008         77 		stw		r3,8(r1)
  00000040 00  3d00 0000         78 		addis		r8,0,cDiagDsmAlData@ha
  00000044 00  8884 0000         79 		lbz		r4,u8DSM_MyPoffUsrArea@l(r4)
  00000048 00  38c1 0008         80 		addi		r6,r1,8
  0000004c 00  3920 01fc         81 		diab.li		r9,508
  00000050 00  38a0 0000         82 		diab.li		r5,0
  00000054 00  38e0 0000         83 		diab.li		r7,0
  00000058 00  3908 0000         84 		addi		r8,r8,cDiagDsmAlData@l
  0000005c 00  4800 0001         85 		bl		s16NVM_ReadData
  00000065 02  0005 0200 0000    86 		.d2line		139
  0000006b 02  0003 080e            	
  00000060 00  7c60 0735         87 		extsh.		r0,r3		# s16Ret=r3
                                 88 	#         DSM_POFF_USR_AREA_ID,
                                 89 	#         eNVM_BLOCKING_MODE,
                                 90 	#         &eStatus,
                                 91 	#         0,
                                 92 	#         (U8*) (void*) &cDiagDsmAlData,
                                 93 	#         (U32) sizeof(cDiagDsmAlData));
                                 94 	# 
                                 95 	#     if (s16Ret == KB_RET_OK)
  00000064 00  4082 0020         96 		bc		4,2,.L234	# ne cr0
                                 97 	#     {
                                 98 	#         u32DiagDsmAlPrevDsmFormatVer = cDiagDsmAlData.u32DsmNvMemFormatVer;
  0000006f 02  0005 0200 0000    99 		.d2line		141
  00000075 02  0010                 	
  00000068 00  3c80 0000        100 		addis		r4,0,cDiagDsmAlData@ha
  0000006c 00  3ca0 0000        101 		addis		r5,0,u32DiagDsmAlPrevDsmFormatVer@ha
  00000070 00  8004 0000        102 		lwz		r0,cDiagDsmAlData@l(r4)
  00000077 02  0005 0200 0000   103 		.d2line		143
  0000007d 02  0010                 	
  00000074 00  3860 0000        104 		diab.li		r3,0		# s16Ret=r3
                                105 	#         cDiagDsmAlData.u32DsmNvMemFormatVer = u32DiagDsmNvMemFormatVersion;
                                106 	.Llo3:
  00000078 00  9005 0000        107 		stw		r0,u32DiagDsmAlPrevDsmFormatVer@l(r5)
                                108 	#         s16Ret = CO_ERROR_NONE;
  0000007f 02  0005 0200 0000   109 		.d2line		142
  00000085 02  000d                 	
  0000007c 00  93e4 0000        110 		stw		r31,cDiagDsmAlData@l(r4)		# u32DiagDsmNvMemFormatVersi
  00000080 00                       	on=r31
  00000080 00  4800 0008        111 		b		.L235
                                112 	.L234:
                                113 	#     }
                                114 	#     else
                                115 	#     {
                                116 	#         s16Ret = CO_ERROR_INTERNAL;
  00000087 02  0005 0200 0000   117 		.d2line		147
  0000008d 02  0003 050e            	
                                118 	.Llo4:
  00000084 00  3860 fff8        119 		diab.li		r3,-8		# s16Ret=r3
                                120 	.L235:
                                121 	#     }
                                122 	# 
                                123 	#     return( s16Ret );
  00000091 02  0005 0200 0000   124 		.d2line		150
  00000097 02  0003 030e            	
                                125 	.Llo2:
  00000088 00  7c63 0734        126 		extsh		r3,r3		# s16Ret=r3
                                127 	# }
  0000009b 02  0005 0200 0000   128 		.d2epilogue_begin
  000000a1 02  000b 01              	
                                129 	.Llo5:
  0000008c 00  83e1 001c        130 		lwz		r31,28(r1)		# offset r1+28  0x1c
  0000001a 04  58c3 c4c5 c6c7   131 		.d2_cfa_restore_list	3,10
  00000020 04  c8c9 ca              	
  000000a4 02  0005 0200 0000   132 		.d2line		151
  000000aa 02  000f                 	
  00000090 00  8001 0024        133 		lwz		r0,36(r1)
  00000094 00  7c08 03a6        134 		mtspr		lr,r0
  00000098 00  3821 0020        135 		addi		r1,r1,32		
  00000023 04  430e 00          136 		.d2_cfa_def_cfa_offset	0
  0000009c 00  4e80 0020        137 		blr
                                138 	#$$ef
                                139 		.d2_cfa_end 2
                                140 		.text
                                141 	#$$ld
                                142 	.L299:
                                143 		.type		s16DiagDsmAlNvMem_init,@function
                                144 		.size		s16DiagDsmAlNvMem_init,.-s16DiagDsmAlNvMem_init
                                145 	# Number of nodes = 47
                                146 	
                                147 	# Allocations for s16DiagDsmAlNvMem_init
                                148 	#	?a4		u32DiagDsmNvMemFormatVersion
                                149 	#	?a5		s16Ret
                                150 	#	SP,8		eStatus
                                151 	# S16 s16DiagDsmAlNvMem_StartUpdate(void)
                                152 	# {
                                153 		.align		2
                                154 		.text
  000000ac 02  0005 0200 0000   155 	        .d2line         156
  000000b2 02  0003 050e            	
                                156 	#$$ld
                                157 	.L316:
                                158 	
                                159 	#$$bf	s16DiagDsmAlNvMem_StartUpdate,interprocedural,nostackparams
                                160 	
                                161 	# Regs written: r0,r1,r3
                                162 		.globl		s16DiagDsmAlNvMem_StartUpdate
  00000028 04  0000 0018 0000   163 		.d2_cfa_start	__cie
  0000002e 04  0000 0000 0000       	
  00000034 04  0000 0018            	
                                164 	s16DiagDsmAlNvMem_StartUpdate:
  000000a0 00  7c08 02a6        165 		mfspr		r0,lr
  000000a4 00  9421 fff0        166 		stwu		r1,-16(r1)		
  00000038 04  420e 10          167 		.d2_cfa_def_cfa_offset	16
  000000a8 00  9001 0014        168 		stw		r0,20(r1)
  0000003b 04  4111 6c7f        169 		.d2_cfa_offset    108,-1
  000000b6 02  0005 0200 0000   170 		.d2prologue_end
  000000bc 02  000a                 	
                                171 	#     return( CO_ERROR_NONE );
  000000be 02  0005 0200 0000   172 		.d2line		157
  000000c4 02  000f                 	
  000000ac 00  3860 0000        173 		diab.li		r3,0
                                174 	# }
  000000c6 02  0005 0200 0000   175 		.d2epilogue_begin
  000000cc 02  000b 01              	
  000000b0 00  3821 0010        176 		addi		r1,r1,16		
  0000003f 04  420e 00          177 		.d2_cfa_def_cfa_offset	0
  000000cf 02  0005 0200 0000   178 		.d2line		158
  000000d5 02  000f                 	
  000000b4 00  4e80 0020        179 		blr
                                180 	#$$ef
                                181 		.d2_cfa_end 2
                                182 		.text
                                183 	#$$ld
                                184 	.L317:
                                185 		.type		s16DiagDsmAlNvMem_StartUpdate,@function
                                186 		.size		s16DiagDsmAlNvMem_StartUpdate,.-s16DiagDsmAlNvMem_StartUpdate
                                187 	# Number of nodes = 2
                                188 	
                                189 	# Allocations for s16DiagDsmAlNvMem_StartUpdate
                                190 	# S16 s16DiagDsmAlNvMem_FinishUpdate(void)
                                191 	# {
                                192 		.align		2
                                193 		.text
  000000d7 02  0005 0200 0000   194 	        .d2line         163
  000000dd 02  0003 050e            	
                                195 	#$$ld
                                196 	.L321:
                                197 	
                                198 	#$$bf	s16DiagDsmAlNvMem_FinishUpdate,interprocedural,rasave,nostackparams
                                199 		.globl		s16DiagDsmAlNvMem_FinishUpdate
  00000044 04  0000 0028 0000   200 		.d2_cfa_start	__cie
  0000004a 04  0000 0000 0000       	
  00000050 04  0000 00a4            	
                                201 	s16DiagDsmAlNvMem_FinishUpdate:
  000000b8 00  3d60 0000        202 		addis		r11,0,__RTC_SP_LIMIT@ha
  000000bc 00  3981 fef0        203 		addi		r12,r1,-272
  000000c0 00  816b 0000        204 		lwz		r11,__RTC_SP_LIMIT@l(r11)
  000000c4 00  7c0c 5840        205 		cmpl		0,0,r12,r11
  000000c8 00  40a0 0010        206 		bc		5,0,.L329
  000000cc 00  7d68 02a6        207 		mfspr		r11,8
  000000d0 00  4800 0001        208 		bl		__sp_grow_s
  000000d4 00  7d68 03a6        209 		mtspr		lr,r11
                                210 	.L329:
  000000d8 00  9421 ffe0        211 		stwu		r1,-32(r1)		
  00000054 04  490e 20          212 		.d2_cfa_def_cfa_offset	32
  000000dc 00  7c08 02a6        213 		mfspr		r0,lr
  000000e0 00  bfa1 0014        214 		stmw		r29,20(r1)		# offset r1+20  0x14
  00000057 04  429d 049e 0011   215 		.d2_cfa_offset_list	29,31,4,-4
  0000005d 04  1f7c                 	
  000000e4 00  9001 0024        216 		stw		r0,36(r1)
  0000005f 04  4111 6c7f        217 		.d2_cfa_offset    108,-1
  000000e1 02  0005 0200 0000   218 		.d2prologue_end
  000000e7 02  000a                 	
                                219 	#     S16 s16Ret;
                                220 	#     U32 u32CalculatedCRC;
                                221 	#     U32 u32BuffLength;
                                222 	#     E_NVM_OPERATION_STATUS eStatus = eNVM_STATUS_OPERATION_INIT;    // local variable for 
                                    	operation status
  000000e9 02  0005 0200 0000   223 		.d2line		167
  000000ef 02  0003 040e            	
  000000e8 00  38a0 0000        224 		diab.li		r5,0
  000000f3 02  0005 0200 0000   225 		.d2line		170
  000000f9 02  0003 030e            	
  000000ec 00  3c60 0000        226 		addis		r3,0,cDiagDsmAlData@ha
  000000f0 00  90a1 0008        227 		stw		r5,8(r1)
                                228 	# 
                                229 	#     // Calculate CRC over Diag DSM DsmNvMemFormatVer and Simple Root cause data
                                230 	#     u32CalculatedCRC = u32SSE_Crc32Dir((U8 *) &cDiagDsmAlData,
  000000f4 00  3cc0 04c1        231 		lis		r6,1217
  000000f8 00  3880 0064        232 		diab.li		r4,100
  000000fc 00  3863 0000        233 		addi		r3,r3,cDiagDsmAlData@l
  00000100 00  60c6 1db7        234 		ori		r6,r6,7607
  000000fd 02  0005 0200 0000   235 		.d2line		175
  00000103 02  0003 050e            	
  00000104 00  3fc0 0000        236 		addis		r30,0,(cDiagDsmAlData+100)@ha
                                237 	#         (U32) DIAG_DSM_SIMPLE_RC_BUFF_LEN,
                                238 	#         (U32) 0,
                                239 	#         SSE_CRC32_CCITT_POLY);
                                240 	# 
                                241 	#     cDiagDsmAlData.u32DsmAlSimpleRCDataCRC = u32CalculatedCRC;
  00000108 00  4800 0001        242 		bl		u32SSE_Crc32Dir
  00000107 02  0005 0200 0000   243 		.d2line		179
  0000010d 02  0003 040e            	
                                244 	.Llo8:
  0000010c 00  3fe0 0000        245 		addis		r31,0,u8DSM_MyPoffUsrArea@ha
                                246 	#     u32BuffLength = (U32) (DIAG_DSM_SIMPLE_RC_BUFF_LEN +
                                247 	#         sizeof(cDiagDsmAlData.u32DsmAlSimpleRCDataCRC));
                                248 	# 
                                249 	#     s16Ret = s16NVM_WriteData(NVM_DEVICE_ID0,  // Device ID for accessing NVM
  00000110 00  3ba0 fff8        250 		diab.li		r29,-8
  00000114 00  907e 0000        251 		stw		r3,(cDiagDsmAlData+100)@l(r30)		# u32CalculatedCRC=r3
  00000118 00  3d00 0000        252 		addis		r8,0,cDiagDsmAlData@ha
  0000011c 00  889f 0000        253 		lbz		r4,u8DSM_MyPoffUsrArea@l(r31)
  00000120 00  38c1 0008        254 		addi		r6,r1,8
  00000124 00  3920 0068        255 		diab.li		r9,104
  00000128 00  38a0 0000        256 		diab.li		r5,0
  0000012c 00  38e0 0000        257 		diab.li		r7,0
  00000130 00  3908 0000        258 		addi		r8,r8,cDiagDsmAlData@l
  00000134 00  3860 0000        259 		diab.li		r3,0
                                260 	.Llo9:
  00000138 00  4800 0001        261 		bl		s16NVM_WriteData
  0000013c 00  7c63 0735        262 		extsh.		r3,r3		# s16Ret=r3
  00000140 00  7c60 e89e        263 		isel		r3,0,r29,2		# s16Ret=r3
                                264 	#         DSM_POFF_USR_AREA_ID,
                                265 	#         eNVM_BLOCKING_MODE,
                                266 	#         &eStatus, 0,
                                267 	#         (U8*) (void*) &cDiagDsmAlData,
                                268 	#         (U32) u32BuffLength);
                                269 	# 
                                270 	#     if (s16Ret == KB_RET_OK)
                                271 	#     {
                                272 	#         s16Ret = CO_ERROR_NONE;
                                273 	#     }
                                274 	#     else
                                275 	#     {
                                276 	#         s16Ret = CO_ERROR_INTERNAL;
                                277 	#     }
                                278 	# 
                                279 	#     return( s16Ret );
  00000111 02  0005 0200 0000   280 		.d2line		195
  00000117 02  0003 100e            	
                                281 	.Llo6:
  00000144 00  7c63 0734        282 		extsh		r3,r3		# s16Ret=r3
                                283 	# }
  0000011b 02  0005 0200 0000   284 		.d2epilogue_begin
  00000121 02  000b 01              	
                                285 	.Llo7:
  00000148 00  bba1 0014        286 		lmw		r29,20(r1)		# offset r1+20  0x14
  00000063 04  59c3 c4c5 c6c7   287 		.d2_cfa_restore_list	3,10
  00000069 04  c8c9 ca              	
  00000124 02  0005 0200 0000   288 		.d2line		196
  0000012a 02  000f                 	
  0000014c 00  8001 0024        289 		lwz		r0,36(r1)
  00000150 00  7c08 03a6        290 		mtspr		lr,r0
  00000154 00  3821 0020        291 		addi		r1,r1,32		
  0000006c 04  430e 00          292 		.d2_cfa_def_cfa_offset	0
  00000158 00  4e80 0020        293 		blr
                                294 	#$$ef
                                295 		.d2_cfa_end 2
                                296 		.text
                                297 	#$$ld
                                298 	.L322:
                                299 		.type		s16DiagDsmAlNvMem_FinishUpdate,@function
                                300 		.size		s16DiagDsmAlNvMem_FinishUpdate,.-s16DiagDsmAlNvMem_FinishUpdate
                                301 	# Number of nodes = 60
                                302 	
                                303 	# Allocations for s16DiagDsmAlNvMem_FinishUpdate
                                304 	#	?a4		s16Ret
                                305 	#	?a5		u32CalculatedCRC
                                306 	#	not allocated	u32BuffLength
                                307 	#	SP,8		eStatus
                                308 	# S16 s16DiagDsmAlNvMem_UpdateSingleEntry(const U16 u16Index,
                                309 	#     const E_DIAG_DSM_SIMPLE_STATE_VALUE eSimpleStateValue,
                                310 	#     const E_DIAG_DSM_DEGRADATION_STATE_VALUE eDegradationStateValue)
                                311 	# {
                                312 		.align		2
                                313 		.text
  0000012c 02  0005 0200 0000   314 	        .d2line         203
  00000132 02  0003 070e            	
                                315 	#$$ld
                                316 	.L332:
                                317 	
                                318 	#$$bf	s16DiagDsmAlNvMem_UpdateSingleEntry,interprocedural,nostackparams
                                319 	
                                320 	# Regs written: r0,r1,r3,r4,r5,r6,r7,cr0,lr
                                321 		.globl		s16DiagDsmAlNvMem_UpdateSingleEntry
  00000070 04  0000 0018 0000   322 		.d2_cfa_start	__cie
  00000076 04  0000 0000 0000       	
  0000007c 04  0000 0064            	
                                323 	s16DiagDsmAlNvMem_UpdateSingleEntry:
                                324 	.Llo10:
  0000015c 00  7c08 02a6        325 		mfspr		r0,lr
  00000160 00  9421 fff0        326 		stwu		r1,-16(r1)		
  00000080 04  420e 10          327 		.d2_cfa_def_cfa_offset	16
  00000164 00  9001 0014        328 		stw		r0,20(r1)
  00000083 04  4111 6c7f        329 		.d2_cfa_offset    108,-1
  00000168 00  7c60 1b78        330 		mr		r0,r3		# u16Index=r0
  00000136 02  0005 0200 0000   331 		.d2prologue_end
  0000013c 02  000a                 	
                                332 	#     S16 s16Ret;
                                333 	# 
                                334 	#     if (u16Index < C_DIAG_DSM_MAX_NR_STATEOBJECTS)
  0000013e 02  0005 0200 0000   335 		.d2line		206
  00000144 02  0003 030e            	
  0000016c 00  5463 043e        336 		rlwinm		r3,r3,0,16,31		# u16Index=r3
                                337 	.Llo11:
  00000170 00  2c03 0060        338 		cmpi		0,0,r3,96
                                339 	.Llo12:
  00000174 00  4080 0034        340 		bc		4,0,.L245	# ge cr0
                                341 	#     {
                                342 	#         cDiagDsmAlData.acDiagDsmAlSimpleRCData[u16Index].u8SimpleStateValue = (U8)eSimpleS
                                    	tateValue;
  00000148 02  0005 0200 0000   343 		.d2line		208
  0000014e 02  0010                 	
                                344 	.Llo18:
  00000178 00  3c60 0000        345 		addis		r3,0,(cDiagDsmAlData+4)@ha
  0000017c 00  5406 043e        346 		rlwinm		r6,r0,0,16,31		# u16Index=r0
  00000180 00  3863 0000        347 		addi		r3,r3,(cDiagDsmAlData+4)@l
                                348 	.Llo16:
  00000184 00  5484 063e        349 		rlwinm		r4,r4,0,24,31		# eSimpleStateValue=r4
                                350 	.Llo17:
  00000188 00  7c03 30ae        351 		lbzx		r0,r3,r6
  00000150 02  0005 0200 0000   352 		.d2line		209
  00000156 02  000f                 	
                                353 	.Llo13:
  0000018c 00  54a7 063e        354 		rlwinm		r7,r5,0,24,31		# eDegradationStateValue=r5
                                355 	#         cDiagDsmAlData.acDiagDsmAlSimpleRCData[u16Index].u8DegradationStateValue = (U8)eDe
                                    	gradationStateValue;
  00000158 02  0005 0200 0000   356 		.d2line		210
  0000015e 02  000f                 	
  00000190 00  38a0 0000        357 		diab.li		r5,0		# s16Ret=r5
                                358 	.Llo19:
  00000194 00  5080 3e30        359 		rlwimi		r0,r4,7,24,24
  00000198 00  5400 063e        360 		extzb		r0,r0
  0000019c 00  50e0 3672        361 		rlwimi		r0,r7,6,25,25
                                362 	#         s16Ret = CO_ERROR_NONE;
  000001a0 00  7c03 31ae        363 		stbx		r0,r3,r6
  000001a4 00  4800 0008        364 		b		.L246
                                365 	.L245:
                                366 	#     }
                                367 	#     else
                                368 	#     {
                                369 	#         s16Ret = CO_ERROR_ARG;
  00000160 02  0005 0200 0000   370 		.d2line		214
  00000166 02  0003 040e            	
                                371 	.Llo14:
  000001a8 00  38a0 fff2        372 		diab.li		r5,-14		# s16Ret=r5
                                373 	.L246:
                                374 	#     }
                                375 	# 
                                376 	#     return( s16Ret );
  0000016a 02  0005 0200 0000   377 		.d2line		217
  00000170 02  0003 030e            	
                                378 	.Llo15:
  000001ac 00  7ca3 0734        379 		extsh		r3,r5		# s16Ret=r5
                                380 	# }
  00000174 02  0005 0200 0000   381 		.d2epilogue_begin
  0000017a 02  000b 01              	
  0000017d 02  0005 0200 0000   382 		.d2line		218
  00000183 02  000f                 	
  000001b0 00  8001 0014        383 		lwz		r0,20(r1)
  000001b4 00  7c08 03a6        384 		mtspr		lr,r0
  000001b8 00  3821 0010        385 		addi		r1,r1,16		
  00000087 04  550e 00          386 		.d2_cfa_def_cfa_offset	0
  000001bc 00  4e80 0020        387 		blr
                                388 	.Llo20:
                                389 	#$$ef
                                390 		.d2_cfa_end 2
                                391 		.text
                                392 	#$$ld
                                393 	.L333:
                                394 		.type		s16DiagDsmAlNvMem_UpdateSingleEntry,@function
                                395 		.size		s16DiagDsmAlNvMem_UpdateSingleEntry,.-s16DiagDsmAlNvMem_UpdateSingle
                                    	Entry
                                396 	# Number of nodes = 39
                                397 	
                                398 	# Allocations for s16DiagDsmAlNvMem_UpdateSingleEntry
                                399 	#	?a4		u16Index
                                400 	#	?a5		eSimpleStateValue
                                401 	#	?a6		eDegradationStateValue
                                402 	#	?a7		$$2
                                403 	#	?a8		$$1
                                404 	#	?a9		s16Ret
                                405 	# S16 s16DiagDsmAlNvMem_GetNvMemBackupStatus(BOOLEAN* const pboBackupAvailable,
                                406 	#     U32* const pu32DiagDsmNvMemFormatVersion)
                                407 	# {
                                408 		.align		2
                                409 		.text
  00000185 02  0005 0200 0000   410 	        .d2line         224
  0000018b 02  0003 060e            	
                                411 	#$$ld
                                412 	.L351:
                                413 	
                                414 	#$$bf	s16DiagDsmAlNvMem_GetNvMemBackupStatus,interprocedural,rasave,nostackparams
                                415 		.globl		s16DiagDsmAlNvMem_GetNvMemBackupStatus
  0000008c 04  0000 0030 0000   416 		.d2_cfa_start	__cie
  00000092 04  0000 0000 0000       	
  00000098 04  0000 0104            	
                                417 	s16DiagDsmAlNvMem_GetNvMemBackupStatus:
  000001c0 00  3d60 0000        418 		addis		r11,0,__RTC_SP_LIMIT@ha
  000001c4 00  3981 fef0        419 		addi		r12,r1,-272
  000001c8 00  816b 0000        420 		lwz		r11,__RTC_SP_LIMIT@l(r11)
  000001cc 00  7c0c 5840        421 		cmpl		0,0,r12,r11
  000001d0 00  40a0 0010        422 		bc		5,0,.L368
  000001d4 00  7d68 02a6        423 		mfspr		r11,8
  000001d8 00  4800 0001        424 		bl		__sp_grow_s
                                425 	.Llo21:
  000001dc 00  7d68 03a6        426 		mtspr		lr,r11
                                427 	.L368:
  000001e0 00  9421 ffd0        428 		stwu		r1,-48(r1)		
  0000009c 04  490e 30          429 		.d2_cfa_def_cfa_offset	48
  000001e4 00  7c08 02a6        430 		mfspr		r0,lr
  000001e8 00  bf61 001c        431 		stmw		r27,28(r1)		# offset r1+28  0x1c
  0000009f 04  429b 0411 1c7e   432 		.d2_cfa_offset_list	27,31,4,-6
  000000a5 04  111d 7811 1e72       	
  000000ab 04  111f 6c              	
  000001ec 00  9001 0034        433 		stw		r0,52(r1)
  000000ae 04  4111 6c7f        434 		.d2_cfa_offset    108,-1
  000001f0 00  7c7f 1b78        435 		mr		r31,r3		# pboBackupAvailable=r31
  000001f4 00  7c9e 2378        436 		mr		r30,r4		# pu32DiagDsmNvMemFormatVersion=r30
  0000018f 02  0005 0200 0000   437 		.d2prologue_end
  00000195 02  000a                 	
                                438 	#     S16 s16Ret;
                                439 	#     U32 u32CalculatedSimpleRCCRC;
                                440 	#     U32 u32CalculatedDetailRCCRC;
                                441 	# 
                                442 	#     // Check the pointer is not null
                                443 	#     if ((pboBackupAvailable != NULL) && (pu32DiagDsmNvMemFormatVersion != NULL))
  00000197 02  0005 0200 0000   444 		.d2line		230
  0000019d 02  0003 060e            	
  000001f8 00  2b03 0000        445 		cmpli		6,0,r3,0		# pboBackupAvailable=r3
  000001fc 00  2804 0000        446 		cmpli		0,0,r4,0		# pu32DiagDsmNvMemFormatVersion=r4
  00000200 00  4c5a 1382        447 		cror		2,26,2
  00000204 00  4182 00a4        448 		bc		12,2,.L254	# eq cr0
                                449 	#     {
                                450 	#         // Calculate and verify DsmNvMemFormatVer and Simple Root cause CRC
                                451 	#         u32CalculatedSimpleRCCRC = u32SSE_Crc32Dir((U8 *) &cDiagDsmAlData,
  000001a1 02  0005 0200 0000   452 		.d2line		233
  000001a7 02  0003 030e            	
                                453 	.Llo22:
  00000208 00  3c60 0000        454 		addis		r3,0,cDiagDsmAlData@ha
                                455 	.Llo23:
  0000020c 00  3cc0 04c1        456 		lis		r6,1217
  00000210 00  3880 0064        457 		diab.li		r4,100
  00000214 00  38a0 0000        458 		diab.li		r5,0
  00000218 00  3863 0000        459 		addi		r3,r3,cDiagDsmAlData@l
  0000021c 00  60c6 1db7        460 		ori		r6,r6,7607
  00000220 00  4800 0001        461 		bl		u32SSE_Crc32Dir
  000001ab 02  0005 0200 0000   462 		.d2line		245
  000001b1 02  0003 0c0e            	
  00000224 00  3f80 0000        463 		addis		r28,0,(cDiagDsmAlData+100)@ha
                                464 	#             (U32) DIAG_DSM_SIMPLE_RC_BUFF_LEN,
                                465 	#             (U32) 0,
                                466 	#             (U32) SSE_CRC32_CCITT_POLY);
                                467 	# 
                                468 	#         // Calculate and verify Detail Root cause CRC
                                469 	#         u32CalculatedDetailRCCRC = u32SSE_Crc32Dir((U8 *) &cDiagDsmAlData.au32DsmAlDetailR
                                    	C,
  000001b5 02  0005 0200 0000   470 		.d2line		239
  000001bb 02  0003 7a0e            	
  00000228 00  3f60 0000        471 		addis		r27,0,u32DiagDsmAlPrevDsmFormatVer@ha
  0000022c 00  7c7d 1b78        472 		mr		r29,r3		# u32CalculatedSimpleRCCRC=r29
                                473 	.Llo31:
  00000230 00  3cc0 04c1        474 		lis		r6,1217
  00000234 00  3c60 0000        475 		addis		r3,0,(cDiagDsmAlData+104)@ha
  00000238 00  3880 0190        476 		diab.li		r4,400
  0000023c 00  38a0 0000        477 		diab.li		r5,0
  00000240 00  60c6 1db7        478 		ori		r6,r6,7607
  00000244 00  3863 0000        479 		addi		r3,r3,(cDiagDsmAlData+104)@l
  00000248 00  3b7b 0000        480 		addi		r27,r27,u32DiagDsmAlPrevDsmFormatVer@l
  0000024c 00  4800 0001        481 		bl		u32SSE_Crc32Dir
                                482 	#             (U32) DIAG_DSM_DETAIL_RC_BUFF_LEN,
                                483 	#             (U32) 0,
                                484 	#             (U32) SSE_CRC32_CCITT_POLY);
                                485 	# 
                                486 	#         // Verify calculated CRC and NV memory CRC
                                487 	#         if (u32CalculatedSimpleRCCRC == cDiagDsmAlData.u32DsmAlSimpleRCDataCRC
                                488 	.Llo33:
  00000250 00  801c 0000        489 		lwz		r0,(cDiagDsmAlData+100)@l(r28)
  00000254 00  7c00 e840        490 		cmpl		0,0,r0,r29		# u32CalculatedSimpleRCCRC=r29
  00000258 00  4082 0038        491 		bc		4,2,.L252	# ne cr0
                                492 	#             && u32CalculatedDetailRCCRC == cDiagDsmAlData.u32DsmAlDetailRCDataCRC)
  000001bf 02  0005 0200 0000   493 		.d2line		246
  000001c5 02  0003 070e            	
                                494 	.Llo32:
  0000025c 00  3c80 0000        495 		addis		r4,0,(cDiagDsmAlData+504)@ha
  00000260 00  8004 0000        496 		lwz		r0,(cDiagDsmAlData+504)@l(r4)
  00000264 00  7c00 1840        497 		cmpl		0,0,r0,r3		# u32CalculatedDetailRCCRC=r3
  00000268 00  4082 0028        498 		bc		4,2,.L252	# ne cr0
                                499 	.Llo34:
  0000026c 00  3c60 0000        500 		addis		r3,0,cDiagDsmAlData@ha
  00000270 00  809b 0000        501 		lwz		r4,0(r27)
  00000274 00  8003 0000        502 		lwz		r0,cDiagDsmAlData@l(r3)
  00000278 00  7c00 2050        503 		subf		r0,r0,r4
  000001c9 02  0005 0200 0000   504 		.d2line		256
  000001cf 02  0003 0a0e            	
  0000027c 00  3860 0000        505 		diab.li		r3,0		# s16Ret=r3
  000001d3 02  0005 0200 0000   506 		.d2line		246
  000001d9 02  0003 760e            	
                                507 	.Llo27:
  00000280 00  7c00 0034        508 		cntlzw		r0,r0
  00000284 00  5400 d97e        509 		rlwinm		r0,r0,27,5,31
                                510 	#         {
                                511 	#             if (u32DiagDsmAlPrevDsmFormatVer == cDiagDsmAlData.u32DsmNvMemFormatVer)
                                512 	#             {
                                513 	#                 *pboBackupAvailable = TRUE;
                                514 	#             }
                                515 	#             else
                                516 	#             {
                                517 	#                 *pboBackupAvailable = FALSE;
                                518 	#             }
                                519 	#             s16Ret = CO_ERROR_NONE;
  00000288 00  981f 0000        520 		stb		r0,0(r31)		# pboBackupAvailable=r31
  0000028c 00  4800 0010        521 		b		.L253
                                522 	.L252:
                                523 	#         }
                                524 	#         else
                                525 	#         {
                                526 	#             *pboBackupAvailable = FALSE;
  000001dd 02  0005 0200 0000   527 		.d2line		260
  000001e3 02  0003 0e0e            	
                                528 	.Llo28:
  00000290 00  3800 0000        529 		diab.li		r0,0
  000001e7 02  0005 0200 0000   530 		.d2line		261
  000001ed 02  000f                 	
  00000294 00  3860 fff8        531 		diab.li		r3,-8		# s16Ret=r3
                                532 	#             s16Ret = CO_ERROR_INTERNAL;
                                533 	.Llo29:
  00000298 00  981f 0000        534 		stb		r0,0(r31)		# pboBackupAvailable=r31
                                535 	.L253:
                                536 	#         }
                                537 	#         *pu32DiagDsmNvMemFormatVersion = u32DiagDsmAlPrevDsmFormatVer;
  000001ef 02  0005 0200 0000   538 		.d2line		263
  000001f5 02  0010                 	
                                539 	.Llo24:
  0000029c 00  801b 0000        540 		lwz		r0,0(r27)
  000002a0 00  901e 0000        541 		stw		r0,0(r30)		# pu32DiagDsmNvMemFormatVersion=r30
  000002a4 00  4800 0008        542 		b		.L255
                                543 	.L254:
                                544 	#     }
                                545 	#     else
                                546 	#     {
                                547 	#         s16Ret = CO_ERROR_ARG;
  000001f7 02  0005 0200 0000   548 		.d2line		267
  000001fd 02  0003 040e            	
                                549 	.Llo25:
  000002a8 00  3860 fff2        550 		diab.li		r3,-14		# s16Ret=r3
                                551 	.L255:
                                552 	#     }
                                553 	# 
                                554 	#     return( s16Ret );
  00000201 02  0005 0200 0000   555 		.d2line		270
  00000207 02  0003 030e            	
                                556 	.Llo26:
  000002ac 00  7c63 0734        557 		extsh		r3,r3		# s16Ret=r3
                                558 	# }
  0000020b 02  0005 0200 0000   559 		.d2epilogue_begin
  00000211 02  000b 01              	
                                560 	.Llo30:
  000002b0 00  bb61 001c        561 		lmw		r27,28(r1)		# offset r1+28  0x1c
  000000b2 04  71c3 c4c5 c6c7   562 		.d2_cfa_restore_list	3,10
  000000b8 04  c8c9 ca              	
  00000214 02  0005 0200 0000   563 		.d2line		271
  0000021a 02  000f                 	
  000002b4 00  8001 0034        564 		lwz		r0,52(r1)
  000002b8 00  7c08 03a6        565 		mtspr		lr,r0
  000002bc 00  3821 0030        566 		addi		r1,r1,48		
  000000bb 04  430e 00          567 		.d2_cfa_def_cfa_offset	0
  000002c0 00  4e80 0020        568 		blr
                                569 	#$$ef
                                570 		.d2_cfa_end 2
                                571 		.text
                                572 	#$$ld
                                573 	.L352:
                                574 		.type		s16DiagDsmAlNvMem_GetNvMemBackupStatus,@function
                                575 		.size		s16DiagDsmAlNvMem_GetNvMemBackupStatus,.-s16DiagDsmAlNvMem_GetNvMemB
                                    	ackupStatus
                                576 	# Number of nodes = 83
                                577 	
                                578 	# Allocations for s16DiagDsmAlNvMem_GetNvMemBackupStatus
                                579 	#	?a4		pboBackupAvailable
                                580 	#	?a5		pu32DiagDsmNvMemFormatVersion
                                581 	#	?a6		$$3
                                582 	#	?a7		s16Ret
                                583 	#	?a8		u32CalculatedSimpleRCCRC
                                584 	#	?a9		u32CalculatedDetailRCCRC
                                585 	# S16 s16DiagDsmAlNvMem_GetSingleEntry(const U16 u16Index,
                                586 	#     E_DIAG_DSM_SIMPLE_STATE_VALUE* const peSimpleStateValue,
                                587 	#     E_DIAG_DSM_DEGRADATION_STATE_VALUE* const peDegradationStateValue)
                                588 	# {
                                589 		.align		2
                                590 		.text
  0000021c 02  0005 0200 0000   591 	        .d2line         278
  00000222 02  0003 070e            	
                                592 	#$$ld
                                593 	.L371:
                                594 	
                                595 	#$$bf	s16DiagDsmAlNvMem_GetSingleEntry,interprocedural,nostackparams
                                596 	
                                597 	# Regs written: r0,r1,r3,r6,r7,cr0,cr1,cr6,lr
                                598 		.globl		s16DiagDsmAlNvMem_GetSingleEntry
  000000c0 04  0000 0018 0000   599 		.d2_cfa_start	__cie
  000000c6 04  0000 0000 0000       	
  000000cc 04  0000 0070            	
                                600 	s16DiagDsmAlNvMem_GetSingleEntry:
                                601 	.Llo35:
  000002c4 00  7c08 02a6        602 		mfspr		r0,lr
  000002c8 00  9421 fff0        603 		stwu		r1,-16(r1)		
  000000d0 04  420e 10          604 		.d2_cfa_def_cfa_offset	16
  000002cc 00  9001 0014        605 		stw		r0,20(r1)
  000000d3 04  4111 6c7f        606 		.d2_cfa_offset    108,-1
  00000226 02  0005 0200 0000   607 		.d2prologue_end
  0000022c 02  000a                 	
                                608 	#     S16 s16Ret;
                                609 	# 
                                610 	#     if( (u16Index < C_DIAG_DSM_MAX_NR_STATEOBJECTS) && (peSimpleStateValue != NULL)
  0000022e 02  0005 0200 0000   611 		.d2line		281
  00000234 02  0003 030e            	
  000002d0 00  5460 043e        612 		rlwinm		r0,r3,0,16,31		# u16Index=r3
  000002d4 00  2b04 0000        613 		cmpli		6,0,r4,0		# peSimpleStateValue=r4
  000002d8 00  2885 0000        614 		cmpli		1,0,r5,0
  000002dc 00  2c00 0060        615 		cmpi		0,0,r0,96
  000002e0 00  4080 003c        616 		bc		4,0,.L263	# ge cr0
                                617 	.Llo36:
  000002e4 00  4c04 0000        618 		mcrf		cr0,cr1
  000002e8 00  4c5a 1382        619 		cror		2,26,2
  000002ec 00  4182 0030        620 		bc		12,2,.L263	# eq cr0
                                621 	#         && (peDegradationStateValue != NULL) )
                                622 	#     {
                                623 	#         *peSimpleStateValue = (E_DIAG_DSM_SIMPLE_STATE_VALUE)cDiagDsmAlData.acDiagDsmAlSim
                                    	pleRCData[u16Index].u8SimpleStateValue; // @suppress("Line length too long")
  00000238 02  0005 0200 0000   624 		.d2line		284
  0000023e 02  0003 030e            	
                                625 	.Llo37:
  000002f0 00  3cc0 0000        626 		addis		r6,0,(cDiagDsmAlData+4)@ha
  000002f4 00  5467 043e        627 		rlwinm		r7,r3,0,16,31		# u16Index=r3
  000002f8 00  38c6 0000        628 		addi		r6,r6,(cDiagDsmAlData+4)@l
  00000242 02  0005 0200 0000   629 		.d2line		286
  00000248 02  0010                 	
  000002fc 00  3860 0000        630 		diab.li		r3,0		# s16Ret=r3
                                631 	.Llo38:
  00000300 00  7c06 38ae        632 		lbzx		r0,r6,r7
  00000304 00  5400 cffe        633 		rlwinm		r0,r0,25,31,31
                                634 	#         *peDegradationStateValue = (E_DIAG_DSM_DEGRADATION_STATE_VALUE)cDiagDsmAlData.acDi
                                    	agDsmAlSimpleRCData[u16Index].u8DegradationStateValue; // @suppress("Line length too long")
  00000308 00  9004 0000        635 		stw		r0,0(r4)		# peSimpleStateValue=r4
  0000024a 02  0005 0200 0000   636 		.d2line		285
  00000250 02  000d                 	
  0000030c 00  7c06 38ae        637 		lbzx		r0,r6,r7
  00000310 00  5400 d7fe        638 		rlwinm		r0,r0,26,31,31
                                639 	#         s16Ret = CO_ERROR_NONE;
  00000314 00  9005 0000        640 		stw		r0,0(r5)		# peDegradationStateValue=r5
  00000318 00  4800 0008        641 		b		.L264
                                642 	.L263:
                                643 	#     }
                                644 	#     else
                                645 	#     {
                                646 	#         s16Ret = CO_ERROR_ARG;
  00000252 02  0005 0200 0000   647 		.d2line		290
  00000258 02  0003 050e            	
                                648 	.Llo39:
  0000031c 00  3860 fff2        649 		diab.li		r3,-14		# s16Ret=r3
                                650 	.L264:
                                651 	#     }
                                652 	# 
                                653 	#     return( s16Ret );
  0000025c 02  0005 0200 0000   654 		.d2line		293
  00000262 02  0003 030e            	
                                655 	.Llo40:
  00000320 00  7c63 0734        656 		extsh		r3,r3		# s16Ret=r3
                                657 	# }
  00000266 02  0005 0200 0000   658 		.d2epilogue_begin
  0000026c 02  000b 01              	
  0000026f 02  0005 0200 0000   659 		.d2line		294
  00000275 02  000f                 	
                                660 	.Llo41:
  00000324 00  8001 0014        661 		lwz		r0,20(r1)
  00000328 00  7c08 03a6        662 		mtspr		lr,r0
  0000032c 00  3821 0010        663 		addi		r1,r1,16		
  000000d7 04  580e 00          664 		.d2_cfa_def_cfa_offset	0
  00000330 00  4e80 0020        665 		blr
                                666 	#$$ef
                                667 		.d2_cfa_end 2
                                668 		.text
                                669 	#$$ld
                                670 	.L372:
                                671 		.type		s16DiagDsmAlNvMem_GetSingleEntry,@function
                                672 		.size		s16DiagDsmAlNvMem_GetSingleEntry,.-s16DiagDsmAlNvMem_GetSingleEntry
                                673 	# Number of nodes = 43
                                674 	
                                675 	# Allocations for s16DiagDsmAlNvMem_GetSingleEntry
                                676 	#	?a4		u16Index
                                677 	#	?a5		peSimpleStateValue
                                678 	#	?a6		peDegradationStateValue
                                679 	#	?a7		s16Ret
                                680 	# S16 s16DiagDsmAlNvMem_UpdateSingleE(const U16 u16Index,
                                681 	#     const E_DIAG_DSM_SIMPLE_STATE_VALUE eSimpleStateValue,
                                682 	#     const E_DIAG_DSM_DEGRADATION_STATE_VALUE eDegradationStateValue,
                                683 	#     const T_DIAG_DSM_SIMPLE_ROOTCAUSE cSimpleRootCause)
                                684 	# {
                                685 		.align		2
                                686 		.text
  00000277 02  0005 0200 0000   687 	        .d2line         302
  0000027d 02  0003 080e            	
                                688 	#$$ld
                                689 	.L385:
                                690 	
                                691 	#$$bf	s16DiagDsmAlNvMem_UpdateSingleE,interprocedural,nostackparams
                                692 	
                                693 	# Regs written: r0,r1,r3,r4,r5,r6,r7,r8,cr0,lr
                                694 		.globl		s16DiagDsmAlNvMem_UpdateSingleE
  000000dc 04  0000 0018 0000   695 		.d2_cfa_start	__cie
  000000e2 04  0000 0000 0000       	
  000000e8 04  0000 0074            	
                                696 	s16DiagDsmAlNvMem_UpdateSingleE:
                                697 	.Llo42:
  00000334 00  7c08 02a6        698 		mfspr		r0,lr
  00000338 00  9421 fff0        699 		stwu		r1,-16(r1)		
  000000ec 04  420e 10          700 		.d2_cfa_def_cfa_offset	16
  0000033c 00  9001 0014        701 		stw		r0,20(r1)
  000000ef 04  4111 6c7f        702 		.d2_cfa_offset    108,-1
  00000340 00  7c60 1b78        703 		mr		r0,r3		# u16Index=r0
  00000281 02  0005 0200 0000   704 		.d2prologue_end
  00000287 02  000a                 	
                                705 	#     S16 s16Ret;
                                706 	# 
                                707 	#     if( u16Index < C_DIAG_DSM_MAX_NR_STATEOBJECTS )
  00000289 02  0005 0200 0000   708 		.d2line		305
  0000028f 02  0003 030e            	
  00000344 00  5463 043e        709 		rlwinm		r3,r3,0,16,31		# u16Index=r3
                                710 	.Llo43:
  00000348 00  2c03 0060        711 		cmpi		0,0,r3,96
                                712 	.Llo44:
  0000034c 00  4080 0044        713 		bc		4,0,.L268	# ge cr0
                                714 	#     {
                                715 	#         cDiagDsmAlData.acDiagDsmAlSimpleRCData[u16Index].u8SimpleStateValue = (U8)eSimpleS
                                    	tateValue;
  00000293 02  0005 0200 0000   716 		.d2line		307
  00000299 02  0010                 	
                                717 	.Llo51:
  00000350 00  3c60 0000        718 		addis		r3,0,(cDiagDsmAlData+4)@ha
  00000354 00  5407 043e        719 		rlwinm		r7,r0,0,16,31		# u16Index=r0
  00000358 00  3863 0000        720 		addi		r3,r3,(cDiagDsmAlData+4)@l
                                721 	.Llo48:
  0000035c 00  5484 063e        722 		rlwinm		r4,r4,0,24,31		# eSimpleStateValue=r4
                                723 	.Llo49:
  00000360 00  7c03 38ae        724 		lbzx		r0,r3,r7
  0000029b 02  0005 0200 0000   725 		.d2line		308
  000002a1 02  000f                 	
                                726 	.Llo45:
  00000364 00  54a5 063e        727 		rlwinm		r5,r5,0,24,31		# eDegradationStateValue=r5
                                728 	#         cDiagDsmAlData.acDiagDsmAlSimpleRCData[u16Index].u8DegradationStateValue = (U8)eDe
                                    	gradationStateValue;
  000002a3 02  0005 0200 0000   729 		.d2line		309
  000002a9 02  000f                 	
                                730 	.Llo50:
  00000368 00  54c8 063e        731 		rlwinm		r8,r6,0,24,31		# cSimpleRootCause=r6
  000002ab 02  0005 0200 0000   732 		.d2line		310
  000002b1 02  000f                 	
  0000036c 00  38c0 0000        733 		diab.li		r6,0		# s16Ret=r6
                                734 	.Llo52:
  00000370 00  5080 3e30        735 		rlwimi		r0,r4,7,24,24
  00000374 00  5400 063e        736 		extzb		r0,r0
                                737 	#         cDiagDsmAlData.acDiagDsmAlSimpleRCData[u16Index].u8SimpleRootCause = (U8)cSimpleRo
                                    	otCause;
  00000378 00  50a0 3672        738 		rlwimi		r0,r5,6,25,25
  0000037c 00  7c03 39ae        739 		stbx		r0,r3,r7
  00000380 00  5400 063e        740 		extzb		r0,r0
  00000384 00  5100 0ebc        741 		rlwimi		r0,r8,1,26,30
                                742 	#         s16Ret = CO_ERROR_NONE;
  00000388 00  7c03 39ae        743 		stbx		r0,r3,r7
  0000038c 00  4800 0008        744 		b		.L269
                                745 	.L268:
                                746 	#     }
                                747 	#     else
                                748 	#     {
                                749 	#         // the index is out of the state object instance
                                750 	#         s16Ret = CO_ERROR_ARG;
  000002b3 02  0005 0200 0000   751 		.d2line		315
  000002b9 02  0003 050e            	
                                752 	.Llo46:
  00000390 00  38c0 fff2        753 		diab.li		r6,-14		# s16Ret=r6
                                754 	.L269:
                                755 	#     }
                                756 	# 
                                757 	#     return( s16Ret );
  000002bd 02  0005 0200 0000   758 		.d2line		318
  000002c3 02  0003 030e            	
                                759 	.Llo47:
  00000394 00  7cc3 0734        760 		extsh		r3,r6		# s16Ret=r6
                                761 	# }
  000002c7 02  0005 0200 0000   762 		.d2epilogue_begin
  000002cd 02  000b 01              	
  000002d0 02  0005 0200 0000   763 		.d2line		319
  000002d6 02  000f                 	
  00000398 00  8001 0014        764 		lwz		r0,20(r1)
  0000039c 00  7c08 03a6        765 		mtspr		lr,r0
  000003a0 00  3821 0010        766 		addi		r1,r1,16		
  000000f3 04  590e 00          767 		.d2_cfa_def_cfa_offset	0
  000003a4 00  4e80 0020        768 		blr
                                769 	.Llo53:
                                770 	#$$ef
                                771 		.d2_cfa_end 2
                                772 		.text
                                773 	#$$ld
                                774 	.L386:
                                775 		.type		s16DiagDsmAlNvMem_UpdateSingleE,@function
                                776 		.size		s16DiagDsmAlNvMem_UpdateSingleE,.-s16DiagDsmAlNvMem_UpdateSingleE
                                777 	# Number of nodes = 51
                                778 	
                                779 	# Allocations for s16DiagDsmAlNvMem_UpdateSingleE
                                780 	#	?a4		u16Index
                                781 	#	?a5		eSimpleStateValue
                                782 	#	?a6		eDegradationStateValue
                                783 	#	?a7		cSimpleRootCause
                                784 	#	?a8		$$6
                                785 	#	?a9		$$5
                                786 	#	?a10		$$4
                                787 	#	?a11		s16Ret
                                788 	# S16 s16DiagDsmAlNvMem_GetSingleE(const U16 u16Index, E_DIAG_DSM_SIMPLE_STATE_VALUE* const 
                                    	peSimpleStateValue,
                                789 	#     E_DIAG_DSM_DEGRADATION_STATE_VALUE* const peDegradationStateValue,
                                790 	#     T_DIAG_DSM_SIMPLE_ROOTCAUSE* const pcSimpleRootCause)
                                791 	# {
                                792 		.align		2
                                793 		.text
  000002d8 02  0005 0200 0000   794 	        .d2line         326
  000002de 02  0003 070e            	
                                795 	#$$ld
                                796 	.L399:
                                797 	
                                798 	#$$bf	s16DiagDsmAlNvMem_GetSingleE,interprocedural,nostackparams
                                799 	
                                800 	# Regs written: r0,r1,r3,r7,r8,cr0,cr1,cr6,lr
                                801 		.globl		s16DiagDsmAlNvMem_GetSingleE
  000000f8 04  0000 0018 0000   802 		.d2_cfa_start	__cie
  000000fe 04  0000 0000 0000       	
  00000104 04  0000 0084            	
                                803 	s16DiagDsmAlNvMem_GetSingleE:
                                804 	.Llo54:
  000003a8 00  7c08 02a6        805 		mfspr		r0,lr
  000003ac 00  9421 fff0        806 		stwu		r1,-16(r1)		
  00000108 04  420e 10          807 		.d2_cfa_def_cfa_offset	16
  000003b0 00  9001 0014        808 		stw		r0,20(r1)
  0000010b 04  4111 6c7f        809 		.d2_cfa_offset    108,-1
  000002e2 02  0005 0200 0000   810 		.d2prologue_end
  000002e8 02  000a                 	
                                811 	#     S16 s16Ret;
                                812 	# 
                                813 	#     if( (u16Index < C_DIAG_DSM_MAX_NR_STATEOBJECTS) && (peSimpleStateValue != NULL)
  000002ea 02  0005 0200 0000   814 		.d2line		329
  000002f0 02  0003 030e            	
  000003b4 00  5460 043e        815 		rlwinm		r0,r3,0,16,31		# u16Index=r3
  000003b8 00  2b04 0000        816 		cmpli		6,0,r4,0		# peSimpleStateValue=r4
  000003bc 00  2885 0000        817 		cmpli		1,0,r5,0
  000003c0 00  2c00 0060        818 		cmpi		0,0,r0,96
  000003c4 00  4080 0050        819 		bc		4,0,.L273	# ge cr0
                                820 	.Llo55:
  000003c8 00  4c04 0000        821 		mcrf		cr0,cr1
  000003cc 00  4c5a 1382        822 		cror		2,26,2
  000002f4 02  0005 0200 0000   823 		.d2line		330
  000002fa 02  000f                 	
  000003d0 00  2c86 0000        824 		cmpi		1,0,r6,0		# pcSimpleRootCause=r6
  000002fc 02  0005 0200 0000   825 		.d2line		329
  00000302 02  000d                 	
  000003d4 00  4182 0040        826 		bc		12,2,.L273	# eq cr0
                                827 	#         && (peDegradationStateValue != NULL) && (pcSimpleRootCause != NULL) )
  00000304 02  0005 0200 0000   828 		.d2line		330
  0000030a 02  000f                 	
                                829 	.Llo59:
  000003d8 00  4186 003c        830 		bc		12,6,.L273	# eq cr1
                                831 	#     {
                                832 	#         *peSimpleStateValue = (E_DIAG_DSM_SIMPLE_STATE_VALUE)cDiagDsmAlData.acDiagDsmAlSim
                                    	pleRCData[u16Index].u8SimpleStateValue; // @suppress("Line length too long")
  0000030c 02  0005 0200 0000   833 		.d2line		332
  00000312 02  0010                 	
                                834 	.Llo56:
  000003dc 00  3ce0 0000        835 		addis		r7,0,(cDiagDsmAlData+4)@ha
  000003e0 00  5468 043e        836 		rlwinm		r8,r3,0,16,31		# u16Index=r3
  000003e4 00  38e7 0000        837 		addi		r7,r7,(cDiagDsmAlData+4)@l
  00000314 02  0005 0200 0000   838 		.d2line		335
  0000031a 02  0003 030e            	
  000003e8 00  3860 0000        839 		diab.li		r3,0		# s16Ret=r3
                                840 	.Llo57:
  000003ec 00  7c07 40ae        841 		lbzx		r0,r7,r8
  000003f0 00  5400 cffe        842 		rlwinm		r0,r0,25,31,31
                                843 	#         *peDegradationStateValue = (E_DIAG_DSM_DEGRADATION_STATE_VALUE)cDiagDsmAlData.acDi
                                    	agDsmAlSimpleRCData[u16Index].u8DegradationStateValue;// @suppress("Line length too long")
  000003f4 00  9004 0000        844 		stw		r0,0(r4)		# peSimpleStateValue=r4
  0000031e 02  0005 0200 0000   845 		.d2line		333
  00000324 02  0003 7e0e            	
  000003f8 00  7c07 40ae        846 		lbzx		r0,r7,r8
  000003fc 00  5400 d7fe        847 		rlwinm		r0,r0,26,31,31
                                848 	#         *pcSimpleRootCause = (T_DIAG_DSM_SIMPLE_ROOTCAUSE)cDiagDsmAlData.acDiagDsmAlSimple
                                    	RCData[u16Index].u8SimpleRootCause;  // @suppress("Line length too long")
  00000400 00  9005 0000        849 		stw		r0,0(r5)		# peDegradationStateValue=r5
  00000328 02  0005 0200 0000   850 		.d2line		334
  0000032e 02  000f                 	
  00000404 00  7c07 40ae        851 		lbzx		r0,r7,r8
  00000408 00  5400 fefe        852 		rlwinm		r0,r0,31,27,31
                                853 	#         s16Ret = CO_ERROR_NONE;
  0000040c 00  9806 0000        854 		stb		r0,0(r6)		# pcSimpleRootCause=r6
  00000410 00  4800 0008        855 		b		.L274
                                856 	.L273:
                                857 	#     }
                                858 	#     else
                                859 	#     {
                                860 	#         s16Ret = CO_ERROR_ARG;
  00000330 02  0005 0200 0000   861 		.d2line		339
  00000336 02  0003 050e            	
                                862 	.Llo58:
  00000414 00  3860 fff2        863 		diab.li		r3,-14		# s16Ret=r3
                                864 	.L274:
                                865 	#     }
                                866 	# 
                                867 	#     return s16Ret;
  0000033a 02  0005 0200 0000   868 		.d2line		342
  00000340 02  0003 030e            	
                                869 	.Llo60:
  00000418 00  7c63 0734        870 		extsh		r3,r3		# s16Ret=r3
                                871 	# }
  00000344 02  0005 0200 0000   872 		.d2epilogue_begin
  0000034a 02  000b 01              	
  0000034d 02  0005 0200 0000   873 		.d2line		343
  00000353 02  000f                 	
                                874 	.Llo61:
  0000041c 00  8001 0014        875 		lwz		r0,20(r1)
  00000420 00  7c08 03a6        876 		mtspr		lr,r0
  00000424 00  3821 0010        877 		addi		r1,r1,16		
  0000010f 04  5d0e 00          878 		.d2_cfa_def_cfa_offset	0
  00000428 00  4e80 0020        879 		blr
                                880 	#$$ef
                                881 		.d2_cfa_end 2
                                882 		.text
                                883 	#$$ld
                                884 	.L400:
                                885 		.type		s16DiagDsmAlNvMem_GetSingleE,@function
                                886 		.size		s16DiagDsmAlNvMem_GetSingleE,.-s16DiagDsmAlNvMem_GetSingleE
                                887 	# Number of nodes = 59
                                888 	
                                889 	# Allocations for s16DiagDsmAlNvMem_GetSingleE
                                890 	#	?a4		u16Index
                                891 	#	?a5		peSimpleStateValue
                                892 	#	?a6		peDegradationStateValue
                                893 	#	?a7		pcSimpleRootCause
                                894 	#	?a8		s16Ret
                                895 	# S16 s16DiagDsmAlNvMem_GetDtldRcTbl(T_DIAG_DSM_DTLDRC_NVMEM_DATA_BUFFER* const pcDetailedRo
                                    	otCauseTable)
                                896 	# {
                                897 		.align		2
                                898 		.text
  00000355 02  0005 0200 0000   899 	        .d2line         348
  0000035b 02  0003 050e            	
                                900 	#$$ld
                                901 	.L412:
                                902 	
                                903 	#$$bf	s16DiagDsmAlNvMem_GetDtldRcTbl,interprocedural,rasave,nostackparams
                                904 		.globl		s16DiagDsmAlNvMem_GetDtldRcTbl
  00000114 04  0000 0024 0000   905 		.d2_cfa_start	__cie
  0000011a 04  0000 0000 0000       	
  00000120 04  0000 007c            	
                                906 	s16DiagDsmAlNvMem_GetDtldRcTbl:
  0000042c 00  3d60 0000        907 		addis		r11,0,__RTC_SP_LIMIT@ha
  00000430 00  3981 fef0        908 		addi		r12,r1,-272
  00000434 00  816b 0000        909 		lwz		r11,__RTC_SP_LIMIT@l(r11)
  00000438 00  7c0c 5840        910 		cmpl		0,0,r12,r11
  0000043c 00  40a0 0010        911 		bc		5,0,.L423
  00000440 00  7d68 02a6        912 		mfspr		r11,8
  00000444 00  4800 0001        913 		bl		__sp_grow_s
  00000448 00  7d68 03a6        914 		mtspr		lr,r11
                                915 	.L423:
                                916 	.Llo62:
  0000044c 00  9421 ffe0        917 		stwu		r1,-32(r1)		
  00000124 04  490e 20          918 		.d2_cfa_def_cfa_offset	32
  00000450 00  7c08 02a6        919 		mfspr		r0,lr
  00000454 00  bfc1 0018        920 		stmw		r30,24(r1)		# offset r1+24  0x18
  00000127 04  429e 049f 01     921 		.d2_cfa_offset_list	30,31,4,-3
  00000458 00  9001 0024        922 		stw		r0,36(r1)
  0000012c 04  4111 6c7f        923 		.d2_cfa_offset    108,-1
  0000035f 02  0005 0200 0000   924 		.d2line		351
  00000365 02  0003 030e            	
  0000045c 00  7c63 1b79        925 		mr.		r3,r3		# pcDetailedRootCauseTable=?a4
  00000369 02  0005 0200 0000   926 		.d2prologue_end
  0000036f 02  000a                 	
                                927 	#     S16 s16Ret;
                                928 	# 
                                929 	#     if (pcDetailedRootCauseTable != NULL)
  00000460 00  4182 002c        930 		bc		12,2,.L280	# eq cr0
                                931 	#     {
                                932 	#         if( NULL == memcpy((void *) pcDetailedRootCauseTable, (void *)
  00000371 02  0005 0200 0000   933 		.d2line		353
  00000377 02  0010                 	
  00000464 00  3c80 0000        934 		addis		r4,0,(cDiagDsmAlData+104)@ha
  00000468 00  38a0 0190        935 		diab.li		r5,400
  0000046c 00  3884 0000        936 		addi		r4,r4,(cDiagDsmAlData+104)@l
  00000379 02  0005 0200 0000   937 		.d2line		356
  0000037f 02  0003 030e            	
  00000470 00  3be0 fff8        938 		diab.li		r31,-8
  00000474 00  4800 0001        939 		bl		memcpy
                                940 	#             cDiagDsmAlData.au32DsmAlDetailRC, DIAG_DSM_DETAIL_RC_SIZE_BYTE) )
                                941 	#         {
                                942 	#             s16Ret = CO_ERROR_INTERNAL;
  00000478 00  2c03 0000        943 		cmpi		0,0,r3,0
  0000047c 00  7c7f f09e        944 		isel		r3,r31,r30,2		# s16Ret=r3 s16Ret=r30
                                945 	.L278:
                                946 	#         }
                                947 	#         else
                                948 	#         {
                                949 	#             s16Ret = CO_ERROR_NONE;
  00000383 02  0005 0200 0000   950 		.d2line		360
  00000389 02  0003 040e            	
                                951 	.Llo63:
  00000480 00  3800 0000        952 		diab.li		r0,0
                                953 	.Llo64:
  00000484 00  7c63 009e        954 		isel		r3,r3,r0,2		# s16Ret=r3 s16Ret=r3
  00000488 00  4800 0008        955 		b		.L281
                                956 	.L280:
                                957 	#         }
                                958 	#     }
                                959 	#     else
                                960 	#     {
                                961 	#         s16Ret = CO_ERROR_ARG;
  0000038d 02  0005 0200 0000   962 		.d2line		365
  00000393 02  0003 050e            	
                                963 	.Llo65:
  0000048c 00  3860 fff2        964 		diab.li		r3,-14		# s16Ret=r3
                                965 	.L281:
                                966 	#     }
                                967 	# 
                                968 	#     return( s16Ret );
  00000397 02  0005 0200 0000   969 		.d2line		368
  0000039d 02  0003 030e            	
                                970 	.Llo66:
  00000490 00  7c63 0734        971 		extsh		r3,r3		# s16Ret=r3
                                972 	# }
  000003a1 02  0005 0200 0000   973 		.d2epilogue_begin
  000003a7 02  000b 01              	
                                974 	.Llo67:
  00000494 00  bbc1 0018        975 		lmw		r30,24(r1)		# offset r1+24  0x18
  00000130 04  4fc3 c4c5 c6c7   976 		.d2_cfa_restore_list	3,10
  00000136 04  c8c9 ca              	
  000003aa 02  0005 0200 0000   977 		.d2line		369
  000003b0 02  000f                 	
  00000498 00  8001 0024        978 		lwz		r0,36(r1)
  0000049c 00  7c08 03a6        979 		mtspr		lr,r0
  000004a0 00  3821 0020        980 		addi		r1,r1,32		
  00000139 04  430e 00          981 		.d2_cfa_def_cfa_offset	0
  000004a4 00  4e80 0020        982 		blr
                                983 	#$$ef
                                984 		.d2_cfa_end 2
                                985 		.text
                                986 	#$$ld
                                987 	.L413:
                                988 		.type		s16DiagDsmAlNvMem_GetDtldRcTbl,@function
                                989 		.size		s16DiagDsmAlNvMem_GetDtldRcTbl,.-s16DiagDsmAlNvMem_GetDtldRcTbl
                                990 	# Number of nodes = 29
                                991 	
                                992 	# Allocations for s16DiagDsmAlNvMem_GetDtldRcTbl
                                993 	#	?a4		pcDetailedRootCauseTable
                                994 	#	?a5		s16Ret
                                995 	# S16 s16DiagDsmAlNvMem_SetDtldRcTbl(T_DIAG_DSM_DTLDRC_NVMEM_DATA_BUFFER* const pcDetailedRo
                                    	otCauseTable)
                                996 	# {
                                997 		.align		2
                                998 		.text
  000003b2 02  0005 0200 0000   999 	        .d2line         375
  000003b8 02  0003 060e            	
                               1000 	#$$ld
                               1001 	.L426:
                               1002 	
                               1003 	#$$bf	s16DiagDsmAlNvMem_SetDtldRcTbl,interprocedural,rasave,nostackparams
                               1004 		.globl		s16DiagDsmAlNvMem_SetDtldRcTbl
  0000013c 04  0000 0024 0000  1005 		.d2_cfa_start	__cie
  00000142 04  0000 0000 0000       	
  00000148 04  0000 00dc            	
                               1006 	s16DiagDsmAlNvMem_SetDtldRcTbl:
  000004a8 00  3d60 0000       1007 		addis		r11,0,__RTC_SP_LIMIT@ha
  000004ac 00  3981 fef0       1008 		addi		r12,r1,-272
  000004b0 00  816b 0000       1009 		lwz		r11,__RTC_SP_LIMIT@l(r11)
  000004b4 00  7c0c 5840       1010 		cmpl		0,0,r12,r11
  000004b8 00  40a0 0010       1011 		bc		5,0,.L437
  000004bc 00  7d68 02a6       1012 		mfspr		r11,8
  000004c0 00  4800 0001       1013 		bl		__sp_grow_s
  000004c4 00  7d68 03a6       1014 		mtspr		lr,r11
                               1015 	.L437:
  000004c8 00  9421 ffe0       1016 		stwu		r1,-32(r1)		
  0000014c 04  490e 20         1017 		.d2_cfa_def_cfa_offset	32
  000004cc 00  7c08 02a6       1018 		mfspr		r0,lr
  000004d0 00  bfc1 0018       1019 		stmw		r30,24(r1)		# offset r1+24  0x18
  0000014f 04  429e 049f 01    1020 		.d2_cfa_offset_list	30,31,4,-3
  000004d4 00  9001 0024       1021 		stw		r0,36(r1)
  00000154 04  4111 6c7f       1022 		.d2_cfa_offset    108,-1
  000003bc 02  0005 0200 0000  1023 		.d2line		383
  000003c2 02  0003 080e            	
  000004d8 00  7c64 1b79       1024 		mr.		r4,r3		# pcDetailedRootCauseTable=?a4
  000003c6 02  0005 0200 0000  1025 		.d2prologue_end
  000003cc 02  000a                 	
                               1026 	#     S16  s16Ret;
                               1027 	#     U32  u32CalculatedCRC = 0;
                               1028 	#     U32  u32BuffLength;
                               1029 	#     U32  u32PoffBuffAddress;
                               1030 	#     U32* pu32DiagDsmDetailRCData = cDiagDsmAlData.au32DsmAlDetailRC;
  000003ce 02  0005 0200 0000  1031 		.d2line		381
  000003d4 02  0003 7e0e            	
  000004dc 00  3800 0000       1032 		diab.li		r0,0
  000003d8 02  0005 0200 0000  1033 		.d2line		380
  000003de 02  000d                 	
  000004e0 00  3fe0 0000       1034 		addis		r31,0,(cDiagDsmAlData+104)@ha
                               1035 	#     E_NVM_OPERATION_STATUS eStatus = eNVM_STATUS_OPERATION_INIT;    // local variable for 
                                    	operation status
  000004e4 00  9001 0008       1036 		stw		r0,8(r1)
  000004e8 00  3bff 0000       1037 		addi		r31,r31,(cDiagDsmAlData+104)@l
                               1038 	# 
                               1039 	#     if( pcDetailedRootCauseTable != NULL )
                               1040 	.Llo76:
  000004ec 00  4182 007c       1041 		bc		12,2,.L290	# eq cr0
                               1042 	#     {
                               1043 	#         if( NULL == memcpy((void *) cDiagDsmAlData.au32DsmAlDetailRC,
  000003e0 02  0005 0200 0000  1044 		.d2line		385
  000003e6 02  0003 050e            	
  000004f0 00  3c60 0000       1045 		addis		r3,0,(cDiagDsmAlData+104)@ha
  000004f4 00  38a0 0190       1046 		diab.li		r5,400
  000004f8 00  3863 0000       1047 		addi		r3,r3,(cDiagDsmAlData+104)@l
  000004fc 00  4800 0001       1048 		bl		memcpy
  00000500 00  2c03 0000       1049 		cmpi		0,0,r3,0
  00000504 00  4082 000c       1050 		bc		4,2,.L288	# ne cr0
                               1051 	#             (void *) pcDetailedRootCauseTable, DIAG_DSM_DETAIL_RC_SIZE_BYTE) )
                               1052 	#         {
                               1053 	#             s16Ret = CO_ERROR_INTERNAL;
  000003ea 02  0005 0200 0000  1054 		.d2line		388
  000003f0 02  0003 030e            	
  00000508 00  3860 fff8       1055 		diab.li		r3,-8		# s16Ret=r3
                               1056 	.Llo68:
  0000050c 00  4800 0060       1057 		b		.L291
                               1058 	.L288:
                               1059 	#         }
                               1060 	#         else
                               1061 	#         {
                               1062 	#             // Calculate CRC over Diag DSM DsmNvMemFormatVer and Simple Root cause data
                               1063 	#             u32CalculatedCRC = u32SSE_Crc32Dir((U8 *) &cDiagDsmAlData.au32DsmAlDetailRC,
  000003f4 02  0005 0200 0000  1064 		.d2line		393
  000003fa 02  0003 050e            	
                               1065 	.Llo69:
  00000510 00  3c60 0000       1066 		addis		r3,0,(cDiagDsmAlData+104)@ha
  00000514 00  3cc0 04c1       1067 		lis		r6,1217
  00000518 00  3880 0190       1068 		diab.li		r4,400
  0000051c 00  38a0 0000       1069 		diab.li		r5,0
  00000520 00  3863 0000       1070 		addi		r3,r3,(cDiagDsmAlData+104)@l
  00000524 00  60c6 1db7       1071 		ori		r6,r6,7607
  00000528 00  4800 0001       1072 		bl		u32SSE_Crc32Dir
                               1073 	#                 (U32)DIAG_DSM_DETAIL_RC_BUFF_LEN,
                               1074 	#                 (U32) 0,
                               1075 	#                 SSE_CRC32_CCITT_POLY);
                               1076 	# 
                               1077 	#             cDiagDsmAlData.u32DsmAlDetailRCDataCRC = u32CalculatedCRC;
  000003fe 02  0005 0200 0000  1078 		.d2line		404
  00000404 02  0003 0b0e            	
                               1079 	.Llo74:
  0000052c 00  3bc0 fff8       1080 		diab.li		r30,-8
  00000408 02  0005 0200 0000  1081 		.d2line		398
  0000040e 02  0003 7a0e            	
  00000530 00  3ca0 0000       1082 		addis		r5,0,(cDiagDsmAlData+504)@ha
                               1083 	#             u32BuffLength = DIAG_DSM_DETAIL_RC_BUFF_LEN + sizeof(cDiagDsmAlData.u32DsmAlDe
                                    	tailRCDataCRC);
                               1084 	#             u32PoffBuffAddress = (U32)(DIAG_DSM_SIMPLE_RC_BUFF_LEN + sizeof(cDiagDsmAlData
                                    	.u32DsmAlSimpleRCDataCRC));
                               1085 	# 
                               1086 	#             //    s16Ret = s16BCL_HAL_PoffWriteData(u8DiagDSMNvMemAreaID, u32PoffBuffAddre
                                    	ss, pu32DiagDsmDetailRCData, u32BuffLength);
                               1087 	# 
                               1088 	#             s16Ret = s16NVM_WriteData(NVM_DEVICE_ID0,  // Device ID for accessing NVM
  00000534 00  3c80 0000       1089 		addis		r4,0,u8DSM_MyPoffUsrArea@ha
  00000538 00  9065 0000       1090 		stw		r3,(cDiagDsmAlData+504)@l(r5)		# u32CalculatedCRC=r3
  0000053c 00  38c1 0008       1091 		addi		r6,r1,8
  00000540 00  8884 0000       1092 		lbz		r4,u8DSM_MyPoffUsrArea@l(r4)
  00000544 00  38e0 0068       1093 		diab.li		r7,104
  00000548 00  7fe8 fb78       1094 		mr		r8,r31		# pu32DiagDsmDetailRCData=r31
  0000054c 00  3920 0194       1095 		diab.li		r9,404
  00000550 00  3860 0000       1096 		diab.li		r3,0
                               1097 	.Llo75:
  00000554 00  38a0 0000       1098 		diab.li		r5,0
  00000558 00  4800 0001       1099 		bl		s16NVM_WriteData
  0000055c 00  7c60 0735       1100 		extsh.		r0,r3		# s16Ret=r3
  00000560 00  7c60 f09e       1101 		isel		r3,0,r30,2		# s16Ret=r3
                               1102 	.Llo70:
  00000564 00  4800 0008       1103 		b		.L291
                               1104 	.L290:
                               1105 	#                 DSM_POFF_USR_AREA_ID,
                               1106 	#                 eNVM_BLOCKING_MODE,
                               1107 	#                 &eStatus,
                               1108 	#                 u32PoffBuffAddress,
                               1109 	#                 (U8*) (void*) pu32DiagDsmDetailRCData,
                               1110 	#                 (U32) u32BuffLength);
                               1111 	# 
                               1112 	# 
                               1113 	#             if (s16Ret == KB_RET_OK)
                               1114 	#             {
                               1115 	#                 s16Ret = CO_ERROR_NONE;
                               1116 	#             }
                               1117 	#             else
                               1118 	#             {
                               1119 	#                 s16Ret = CO_ERROR_INTERNAL;
                               1120 	#             }
                               1121 	#         }
                               1122 	#     }
                               1123 	#     else
                               1124 	#     {
                               1125 	#         s16Ret = CO_ERROR_ARG;
  00000412 02  0005 0200 0000  1126 		.d2line		425
  00000418 02  0003 1b0e            	
                               1127 	.Llo71:
  00000568 00  3860 fff2       1128 		diab.li		r3,-14		# s16Ret=r3
                               1129 	.L291:
                               1130 	#     }
                               1131 	# 
                               1132 	#     return( s16Ret );
  0000041c 02  0005 0200 0000  1133 		.d2line		428
  00000422 02  0003 030e            	
                               1134 	.Llo72:
  0000056c 00  7c63 0734       1135 		extsh		r3,r3		# s16Ret=r3
                               1136 	# }
  00000426 02  0005 0200 0000  1137 		.d2epilogue_begin
  0000042c 02  000b 01              	
                               1138 	.Llo73:
  00000570 00  bbc1 0018       1139 		lmw		r30,24(r1)		# offset r1+24  0x18
  00000158 04  67c3 c4c5 c6c7  1140 		.d2_cfa_restore_list	3,10
  0000015e 04  c8c9 ca              	
  0000042f 02  0005 0200 0000  1141 		.d2line		429
  00000435 02  000f                 	
  00000574 00  8001 0024       1142 		lwz		r0,36(r1)
  00000578 00  7c08 03a6       1143 		mtspr		lr,r0
  0000057c 00  3821 0020       1144 		addi		r1,r1,32		
  00000161 04  430e 00         1145 		.d2_cfa_def_cfa_offset	0
  00000580 00  4e80 0020       1146 		blr
                               1147 	#$$ef
                               1148 		.d2_cfa_end 2
                               1149 		.text
                               1150 	#$$ld
                               1151 	.L427:
                               1152 		.type		s16DiagDsmAlNvMem_SetDtldRcTbl,@function
                               1153 		.size		s16DiagDsmAlNvMem_SetDtldRcTbl,.-s16DiagDsmAlNvMem_SetDtldRcTbl
                               1154 	# Number of nodes = 97
                               1155 	
                               1156 	# Allocations for s16DiagDsmAlNvMem_SetDtldRcTbl
                               1157 	#	?a4		pcDetailedRootCauseTable
                               1158 	#	?a5		s16Ret
                               1159 	#	?a6		u32CalculatedCRC
                               1160 	#	not allocated	u32BuffLength
                               1161 	#	not allocated	u32PoffBuffAddress
                               1162 	#	?a7		pu32DiagDsmDetailRCData
                               1163 	#	SP,8		eStatus
                               1164 	
                               1165 	# Allocations for module
                               1166 		.text
  00000584 00                  1167 		.0byte		.L438
                               1168 		.bss
  00000000 05                  1169 		.0byte		.L441
                               1170 		.bss
                               1171 		.type		cDiagDsmAlData,@object
                               1172 		.size		cDiagDsmAlData,508
                               1173 		.align		2
                               1174 	cDiagDsmAlData:
                               1175 		.space		508
                               1176 		.bss
                               1177 		.align		2
                               1178 	#	Begin local data area
                               1179 	#	LDA + 0
                               1180 		.type		u32DiagDsmAlPrevDsmFormatVer,@object
                               1181 		.size		u32DiagDsmAlPrevDsmFormatVer,4
                               1182 		.align		2
                               1183 	u32DiagDsmAlPrevDsmFormatVer:
                               1184 		.space		4
                               1185 		.text
                               1186 	#$$ld
                               1187 	.L5:
  00000437 02  0039 032e 2e5c  1188 	.L454:	.d2filenum "..\\..\\..\\..\\FWK\\deployment\\lad\\DiagDsmTypes.h"
  0000043d 02  5c2e 2e5c 5c2e       	
  00000443 02  2e5c 5c2e 2e5c       	
  00000449 02  5c46 574b 5c5c       	
  0000044f 02  6465 706c 6f79       	
  00000455 02  6d65                 	
  00000472 02  003a 032e 2e5c  1189 	.L439:	.d2filenum "..\\..\\..\\..\\FWK\\deployment\\lad\\FwkAlDsmNvMem.h"
  00000478 02  5c2e 2e5c 5c2e       	
  0000047e 02  2e5c 5c2e 2e5c       	
  00000484 02  5c46 574b 5c5c       	
  0000048a 02  6465 706c 6f79       	
  00000490 02  6d65                 	
                               1190 	.L300:	.d2filenum "..\\source\\diagdsmnvmem.c"
  000004ae 02  0005 0200 0000  1191 		.d2_line_end
  000004b4 02  0000 0101            	
                               1192 	
                               1193 	
                               1194 		.section	.debug_abbrev,,n
                               1195 	.L9:
                               1196 		.section	.debug_abbrev,,n
  00000000 06  01              1197 		.uleb128	1
  00000001 06  11              1198 		.uleb128	17
  00000002 06  01              1199 		.byte		0x1
  00000003 06  01              1200 		.uleb128	1
  00000004 06  13              1201 		.uleb128	19
  00000005 06  03              1202 		.uleb128	3
  00000006 06  08              1203 		.uleb128	8
  00000007 06  25              1204 		.uleb128	37
  00000008 06  08              1205 		.uleb128	8
  00000009 06  1b              1206 		.uleb128	27
  0000000a 06  08              1207 		.uleb128	8
  0000000b 06  13              1208 		.uleb128	19
  0000000c 06  0f              1209 		.uleb128	15
  0000000d 06  11              1210 		.uleb128	17
  0000000e 06  01              1211 		.uleb128	1
  0000000f 06  12              1212 		.uleb128	18
  00000010 06  01              1213 		.uleb128	1
  00000011 06  10              1214 		.uleb128	16
  00000012 06  06              1215 		.uleb128	6
  00000013 06  00              1216 		.uleb128	0
  00000014 06  00              1217 		.uleb128	0
                               1218 		.section	.debug_abbrev,,n
  00000015 06  02              1219 		.uleb128	2
  00000016 06  2e              1220 		.uleb128	46
  00000017 06  01              1221 		.byte		0x1
  00000018 06  01              1222 		.uleb128	1
  00000019 06  13              1223 		.uleb128	19
  0000001a 06  03              1224 		.uleb128	3
  0000001b 06  08              1225 		.uleb128	8
  0000001c 06  3a              1226 		.uleb128	58
  0000001d 06  06              1227 		.uleb128	6
  0000001e 06  3b              1228 		.uleb128	59
  0000001f 06  0f              1229 		.uleb128	15
  00000020 06  49              1230 		.uleb128	73
  00000021 06  10              1231 		.uleb128	16
  00000022 06  3f              1232 		.uleb128	63
  00000023 06  0c              1233 		.uleb128	12
  00000024 06  27              1234 		.uleb128	39
  00000025 06  0c              1235 		.uleb128	12
  00000026 06  11              1236 		.uleb128	17
  00000027 06  01              1237 		.uleb128	1
  00000028 06  12              1238 		.uleb128	18
  00000029 06  01              1239 		.uleb128	1
  0000002a 06  00              1240 		.uleb128	0
  0000002b 06  00              1241 		.uleb128	0
                               1242 		.section	.debug_abbrev,,n
  0000002c 06  03              1243 		.uleb128	3
  0000002d 06  05              1244 		.uleb128	5
  0000002e 06  00              1245 		.byte		0x0
  0000002f 06  3a              1246 		.uleb128	58
  00000030 06  06              1247 		.uleb128	6
  00000031 06  3b              1248 		.uleb128	59
  00000032 06  0f              1249 		.uleb128	15
  00000033 06  03              1250 		.uleb128	3
  00000034 06  08              1251 		.uleb128	8
  00000035 06  49              1252 		.uleb128	73
  00000036 06  10              1253 		.uleb128	16
  00000037 06  02              1254 		.uleb128	2
  00000038 06  06              1255 		.uleb128	6
  00000039 06  00              1256 		.uleb128	0
  0000003a 06  00              1257 		.uleb128	0
                               1258 		.section	.debug_abbrev,,n
  0000003b 06  04              1259 		.uleb128	4
  0000003c 06  34              1260 		.uleb128	52
  0000003d 06  00              1261 		.byte		0x0
  0000003e 06  3a              1262 		.uleb128	58
  0000003f 06  06              1263 		.uleb128	6
  00000040 06  3b              1264 		.uleb128	59
  00000041 06  0f              1265 		.uleb128	15
  00000042 06  03              1266 		.uleb128	3
  00000043 06  08              1267 		.uleb128	8
  00000044 06  49              1268 		.uleb128	73
  00000045 06  10              1269 		.uleb128	16
  00000046 06  02              1270 		.uleb128	2
  00000047 06  06              1271 		.uleb128	6
  00000048 06  00              1272 		.uleb128	0
  00000049 06  00              1273 		.uleb128	0
                               1274 		.section	.debug_abbrev,,n
  0000004a 06  05              1275 		.uleb128	5
  0000004b 06  34              1276 		.uleb128	52
  0000004c 06  00              1277 		.byte		0x0
  0000004d 06  3a              1278 		.uleb128	58
  0000004e 06  06              1279 		.uleb128	6
  0000004f 06  3b              1280 		.uleb128	59
  00000050 06  0f              1281 		.uleb128	15
  00000051 06  03              1282 		.uleb128	3
  00000052 06  08              1283 		.uleb128	8
  00000053 06  49              1284 		.uleb128	73
  00000054 06  10              1285 		.uleb128	16
  00000055 06  02              1286 		.uleb128	2
  00000056 06  09              1287 		.uleb128	9
  00000057 06  00              1288 		.uleb128	0
  00000058 06  00              1289 		.uleb128	0
                               1290 		.section	.debug_abbrev,,n
  00000059 06  06              1291 		.uleb128	6
  0000005a 06  34              1292 		.uleb128	52
  0000005b 06  00              1293 		.byte		0x0
  0000005c 06  3f              1294 		.uleb128	63
  0000005d 06  0c              1295 		.uleb128	12
  0000005e 06  3c              1296 		.uleb128	60
  0000005f 06  0c              1297 		.uleb128	12
  00000060 06  3a              1298 		.uleb128	58
  00000061 06  06              1299 		.uleb128	6
  00000062 06  3b              1300 		.uleb128	59
  00000063 06  0f              1301 		.uleb128	15
  00000064 06  03              1302 		.uleb128	3
  00000065 06  08              1303 		.uleb128	8
  00000066 06  49              1304 		.uleb128	73
  00000067 06  10              1305 		.uleb128	16
  00000068 06  00              1306 		.uleb128	0
  00000069 06  00              1307 		.uleb128	0
                               1308 		.section	.debug_abbrev,,n
  0000006a 06  07              1309 		.uleb128	7
  0000006b 06  13              1310 		.uleb128	19
  0000006c 06  01              1311 		.byte		0x1
  0000006d 06  01              1312 		.uleb128	1
  0000006e 06  13              1313 		.uleb128	19
  0000006f 06  0b              1314 		.uleb128	11
  00000070 06  0f              1315 		.uleb128	15
  00000071 06  00              1316 		.uleb128	0
  00000072 06  00              1317 		.uleb128	0
                               1318 		.section	.debug_abbrev,,n
  00000073 06  08              1319 		.uleb128	8
  00000074 06  0d              1320 		.uleb128	13
  00000075 06  00              1321 		.byte		0x0
  00000076 06  03              1322 		.uleb128	3
  00000077 06  08              1323 		.uleb128	8
  00000078 06  49              1324 		.uleb128	73
  00000079 06  10              1325 		.uleb128	16
  0000007a 06  38              1326 		.uleb128	56
  0000007b 06  09              1327 		.uleb128	9
  0000007c 06  00              1328 		.uleb128	0
  0000007d 06  00              1329 		.uleb128	0
                               1330 		.section	.debug_abbrev,,n
  0000007e 06  09              1331 		.uleb128	9
  0000007f 06  0d              1332 		.uleb128	13
  00000080 06  00              1333 		.byte		0x0
  00000081 06  03              1334 		.uleb128	3
  00000082 06  08              1335 		.uleb128	8
  00000083 06  49              1336 		.uleb128	73
  00000084 06  10              1337 		.uleb128	16
  00000085 06  0b              1338 		.uleb128	11
  00000086 06  0f              1339 		.uleb128	15
  00000087 06  0d              1340 		.uleb128	13
  00000088 06  0b              1341 		.uleb128	11
  00000089 06  0c              1342 		.uleb128	12
  0000008a 06  0b              1343 		.uleb128	11
  0000008b 06  38              1344 		.uleb128	56
  0000008c 06  09              1345 		.uleb128	9
  0000008d 06  00              1346 		.uleb128	0
  0000008e 06  00              1347 		.uleb128	0
                               1348 		.section	.debug_abbrev,,n
  0000008f 06  0a              1349 		.uleb128	10
  00000090 06  04              1350 		.uleb128	4
  00000091 06  01              1351 		.byte		0x1
  00000092 06  01              1352 		.uleb128	1
  00000093 06  13              1353 		.uleb128	19
  00000094 06  0b              1354 		.uleb128	11
  00000095 06  0f              1355 		.uleb128	15
  00000096 06  00              1356 		.uleb128	0
  00000097 06  00              1357 		.uleb128	0
                               1358 		.section	.debug_abbrev,,n
  00000098 06  0b              1359 		.uleb128	11
  00000099 06  28              1360 		.uleb128	40
  0000009a 06  00              1361 		.byte		0x0
  0000009b 06  03              1362 		.uleb128	3
  0000009c 06  08              1363 		.uleb128	8
  0000009d 06  1c              1364 		.uleb128	28
  0000009e 06  0d              1365 		.uleb128	13
  0000009f 06  00              1366 		.uleb128	0
  000000a0 06  00              1367 		.uleb128	0
                               1368 		.section	.debug_abbrev,,n
  000000a1 06  0c              1369 		.uleb128	12
  000000a2 06  04              1370 		.uleb128	4
  000000a3 06  01              1371 		.byte		0x1
  000000a4 06  3a              1372 		.uleb128	58
  000000a5 06  06              1373 		.uleb128	6
  000000a6 06  3b              1374 		.uleb128	59
  000000a7 06  0f              1375 		.uleb128	15
  000000a8 06  01              1376 		.uleb128	1
  000000a9 06  13              1377 		.uleb128	19
  000000aa 06  03              1378 		.uleb128	3
  000000ab 06  08              1379 		.uleb128	8
  000000ac 06  0b              1380 		.uleb128	11
  000000ad 06  0f              1381 		.uleb128	15
  000000ae 06  00              1382 		.uleb128	0
  000000af 06  00              1383 		.uleb128	0
                               1384 		.section	.debug_abbrev,,n
  000000b0 06  0d              1385 		.uleb128	13
  000000b1 06  24              1386 		.uleb128	36
  000000b2 06  00              1387 		.byte		0x0
  000000b3 06  03              1388 		.uleb128	3
  000000b4 06  08              1389 		.uleb128	8
  000000b5 06  3e              1390 		.uleb128	62
  000000b6 06  0b              1391 		.uleb128	11
  000000b7 06  0b              1392 		.uleb128	11
  000000b8 06  0b              1393 		.uleb128	11
  000000b9 06  00              1394 		.uleb128	0
  000000ba 06  00              1395 		.uleb128	0
                               1396 		.section	.debug_abbrev,,n
  000000bb 06  0e              1397 		.uleb128	14
  000000bc 06  16              1398 		.uleb128	22
  000000bd 06  00              1399 		.byte		0x0
  000000be 06  03              1400 		.uleb128	3
  000000bf 06  08              1401 		.uleb128	8
  000000c0 06  49              1402 		.uleb128	73
  000000c1 06  10              1403 		.uleb128	16
  000000c2 06  00              1404 		.uleb128	0
  000000c3 06  00              1405 		.uleb128	0
                               1406 		.section	.debug_abbrev,,n
  000000c4 06  0f              1407 		.uleb128	15
  000000c5 06  26              1408 		.uleb128	38
  000000c6 06  00              1409 		.byte		0x0
  000000c7 06  49              1410 		.uleb128	73
  000000c8 06  10              1411 		.uleb128	16
  000000c9 06  00              1412 		.uleb128	0
  000000ca 06  00              1413 		.uleb128	0
                               1414 		.section	.debug_abbrev,,n
  000000cb 06  10              1415 		.uleb128	16
  000000cc 06  0f              1416 		.uleb128	15
  000000cd 06  00              1417 		.byte		0x0
  000000ce 06  49              1418 		.uleb128	73
  000000cf 06  10              1419 		.uleb128	16
  000000d0 06  00              1420 		.uleb128	0
  000000d1 06  00              1421 		.uleb128	0
                               1422 		.section	.debug_abbrev,,n
  000000d2 06  11              1423 		.uleb128	17
  000000d3 06  01              1424 		.uleb128	1
  000000d4 06  01              1425 		.byte		0x1
  000000d5 06  01              1426 		.uleb128	1
  000000d6 06  13              1427 		.uleb128	19
  000000d7 06  49              1428 		.uleb128	73
  000000d8 06  10              1429 		.uleb128	16
  000000d9 06  00              1430 		.uleb128	0
  000000da 06  00              1431 		.uleb128	0
                               1432 		.section	.debug_abbrev,,n
  000000db 06  12              1433 		.uleb128	18
  000000dc 06  21              1434 		.uleb128	33
  000000dd 06  00              1435 		.byte		0x0
  000000de 06  2f              1436 		.uleb128	47
  000000df 06  0f              1437 		.uleb128	15
  000000e0 06  00              1438 		.uleb128	0
  000000e1 06  00              1439 		.uleb128	0
                               1440 		.section	.debug_abbrev,,n
  000000e2 06  00              1441 		.sleb128	0
                               1442 	
                               1443 	
                               1444 		.section	.debug_info,,n
                               1445 	.L2:
  00000000 07  0000 0c39       1446 		.4byte		.L3-.L1
                               1447 	.L1:
  00000004 07  0002            1448 		.2byte		0x2
  00000006 07  0000 0000       1449 		.4byte		.L9
  0000000a 07  04              1450 		.byte		0x4
                               1451 		.section	.debug_info,,n
  0000000b 07  01              1452 		.sleb128	1
  0000000c 07  0000 0c3c       1453 		.4byte		.L7-.L2
  00000010 07  2e2e 5c73 6f75  1454 		.byte		"..\\source\\diagdsmnvmem.c"
  00000016 07  7263 655c 6469       	
  0000001c 07  6167 6473 6d6e       	
  00000022 07  766d 656d 2e63       	
  00000028 07  00              1455 		.byte		0
  00000029 07  4469 6162 2044  1456 		.byte		"Diab Data, Inc:dcc Rel 5.9.3.0:PPC5554"
  0000002f 07  6174 612c 2049       	
  00000035 07  6e63 3a64 6363       	
  0000003b 07  2052 656c 2035       	
  00000041 07  2e39 2e33 2e30       	
  00000047 07  3a50                 	
  0000004f 07  00              1457 		.byte		0
  00000050 07  433a 5c44 6973  1458 		.byte		"C:\\Disco_D\\Progetti\\LADS\\LAD01\\SW\\LAD01_CA_CCA_Integration\\f
  00000056 07  636f 5f44 5c50       	offo.development_21042023\\SRC\\LAD_CPU04\\mwl\\mwl01\\source"
  0000005c 07  726f 6765 7474       	
  00000062 07  695c 4c41 4453       	
  00000068 07  5c4c 4144 3031       	
  0000006e 07  5c53                 	
  000000c4 07  00              1459 		.byte		0
  000000c5 07  01              1460 		.uleb128	1
  000000c6 07  0000 0000       1461 		.4byte		.L4
  000000ca 07  0000 0000       1462 		.4byte		.L5
  000000ce 07  0000 0000       1463 		.4byte		.L8
                               1464 		.section	.debug_info,,n
                               1465 	.L303:
  000000d2 07  02              1466 		.sleb128	2
  000000d3 07  0000 0159       1467 		.4byte		.L297-.L2
  000000d7 07  7331 3644 6961  1468 		.byte		"s16DiagDsmAlNvMem_init"
  000000dd 07  6744 736d 416c       	
  000000e3 07  4e76 4d65 6d5f       	
  000000e9 07  696e 6974            	
  000000ed 07  00              1469 		.byte		0
  000000ee 07  0000 0001       1470 		.4byte		.L300
  000000f2 07  7d              1471 		.uleb128	125
  000000f3 07  0000 0000       1472 		.4byte		.L301
  000000f7 07  01              1473 		.byte		0x1
  000000f8 07  01              1474 		.byte		0x1
  000000f9 07  0000 0000       1475 		.4byte		.L298
  000000fd 07  0000 0000       1476 		.4byte		.L299
                               1477 		.section	.debug_info,,n
  00000101 07  03              1478 		.sleb128	3
  00000102 07  0000 0001       1479 		.4byte		.L300
  00000106 07  7d              1480 		.uleb128	125
  00000107 07  7533 3244 6961  1481 		.byte		"u32DiagDsmNvMemFormatVersion"
  0000010d 07  6744 736d 4e76       	
  00000113 07  4d65 6d46 6f72       	
  00000119 07  6d61 7456 6572       	
  0000011f 07  7369 6f6e            	
  00000123 07  00              1482 		.byte		0
  00000124 07  0000 0000       1483 		.4byte		.L304
  00000128 07  0000 0000       1484 		.4byte		.L307
                               1485 		.section	.debug_info,,n
                               1486 	.L308:
  0000012c 07  04              1487 		.sleb128	4
  0000012d 07  0000 0001       1488 		.4byte		.L300
  00000131 07  7f              1489 		.uleb128	127
  00000132 07  7331 3652 6574  1490 		.byte		"s16Ret"
  00000138 07  00              1491 		.byte		0
  00000139 07  0000 0000       1492 		.4byte		.L301
  0000013d 07  0000 0000       1493 		.4byte		.L309
                               1494 		.section	.debug_info,,n
                               1495 	.L310:
  00000141 07  05              1496 		.sleb128	5
  00000142 07  0000 0001       1497 		.4byte		.L300
  00000146 07  8001            1498 		.uleb128	128
  00000148 07  6553 7461 7475  1499 		.byte		"eStatus"
  0000014e 07  73                   	
  0000014f 07  00              1500 		.byte		0
  00000150 07  0000 0000       1501 		.4byte		.L311
  00000154 07  03              1502 		.sleb128	3
  00000155 07  92              1503 		.byte		0x92
  00000156 07  01              1504 		.uleb128	1
  00000157 07  08              1505 		.sleb128	8
                               1506 		.section	.debug_info,,n
  00000158 07  00              1507 		.sleb128	0
                               1508 	.L297:
                               1509 		.section	.debug_info,,n
                               1510 	.L318:
  00000159 07  02              1511 		.sleb128	2
  0000015a 07  0000 0191       1512 		.4byte		.L315-.L2
  0000015e 07  7331 3644 6961  1513 		.byte		"s16DiagDsmAlNvMem_StartUpdate"
  00000164 07  6744 736d 416c       	
  0000016a 07  4e76 4d65 6d5f       	
  00000170 07  5374 6172 7455       	
  00000176 07  7064 6174 65         	
  0000017b 07  00              1514 		.byte		0
  0000017c 07  0000 0001       1515 		.4byte		.L300
  00000180 07  9b01            1516 		.uleb128	155
  00000182 07  0000 0000       1517 		.4byte		.L301
  00000186 07  01              1518 		.byte		0x1
  00000187 07  01              1519 		.byte		0x1
  00000188 07  0000 0000       1520 		.4byte		.L316
  0000018c 07  0000 0000       1521 		.4byte		.L317
                               1522 		.section	.debug_info,,n
  00000190 07  00              1523 		.sleb128	0
                               1524 	.L315:
                               1525 		.section	.debug_info,,n
                               1526 	.L323:
  00000191 07  02              1527 		.sleb128	2
  00000192 07  0000 0217       1528 		.4byte		.L320-.L2
  00000196 07  7331 3644 6961  1529 		.byte		"s16DiagDsmAlNvMem_FinishUpdate"
  0000019c 07  6744 736d 416c       	
  000001a2 07  4e76 4d65 6d5f       	
  000001a8 07  4669 6e69 7368       	
  000001ae 07  5570 6461 7465       	
  000001b4 07  00              1530 		.byte		0
  000001b5 07  0000 0001       1531 		.4byte		.L300
  000001b9 07  a201            1532 		.uleb128	162
  000001bb 07  0000 0000       1533 		.4byte		.L301
  000001bf 07  01              1534 		.byte		0x1
  000001c0 07  01              1535 		.byte		0x1
  000001c1 07  0000 0000       1536 		.4byte		.L321
  000001c5 07  0000 0000       1537 		.4byte		.L322
                               1538 	.L324:
  000001c9 07  04              1539 		.sleb128	4
  000001ca 07  0000 0001       1540 		.4byte		.L300
  000001ce 07  a401            1541 		.uleb128	164
  000001d0 07  7331 3652 6574  1542 		.byte		"s16Ret"
  000001d6 07  00              1543 		.byte		0
  000001d7 07  0000 0000       1544 		.4byte		.L301
  000001db 07  0000 0000       1545 		.4byte		.L325
                               1546 	.L326:
  000001df 07  04              1547 		.sleb128	4
  000001e0 07  0000 0001       1548 		.4byte		.L300
  000001e4 07  a501            1549 		.uleb128	165
  000001e6 07  7533 3243 616c  1550 		.byte		"u32CalculatedCRC"
  000001ec 07  6375 6c61 7465       	
  000001f2 07  6443 5243            	
  000001f6 07  00              1551 		.byte		0
  000001f7 07  0000 0000       1552 		.4byte		.L305
  000001fb 07  0000 0000       1553 		.4byte		.L327
                               1554 	.L328:
  000001ff 07  05              1555 		.sleb128	5
  00000200 07  0000 0001       1556 		.4byte		.L300
  00000204 07  a701            1557 		.uleb128	167
  00000206 07  6553 7461 7475  1558 		.byte		"eStatus"
  0000020c 07  73                   	
  0000020d 07  00              1559 		.byte		0
  0000020e 07  0000 0000       1560 		.4byte		.L311
  00000212 07  03              1561 		.sleb128	3
  00000213 07  92              1562 		.byte		0x92
  00000214 07  01              1563 		.uleb128	1
  00000215 07  08              1564 		.sleb128	8
                               1565 		.section	.debug_info,,n
  00000216 07  00              1566 		.sleb128	0
                               1567 	.L320:
                               1568 		.section	.debug_info,,n
                               1569 	.L334:
  00000217 07  02              1570 		.sleb128	2
  00000218 07  0000 02ca       1571 		.4byte		.L331-.L2
  0000021c 07  7331 3644 6961  1572 		.byte		"s16DiagDsmAlNvMem_UpdateSingleEntry"
  00000222 07  6744 736d 416c       	
  00000228 07  4e76 4d65 6d5f       	
  0000022e 07  5570 6461 7465       	
  00000234 07  5369 6e67 6c65       	
  0000023a 07  456e                 	
  0000023f 07  00              1573 		.byte		0
  00000240 07  0000 0001       1574 		.4byte		.L300
  00000244 07  c801            1575 		.uleb128	200
  00000246 07  0000 0000       1576 		.4byte		.L301
  0000024a 07  01              1577 		.byte		0x1
  0000024b 07  01              1578 		.byte		0x1
  0000024c 07  0000 0000       1579 		.4byte		.L332
  00000250 07  0000 0000       1580 		.4byte		.L333
  00000254 07  03              1581 		.sleb128	3
  00000255 07  0000 0001       1582 		.4byte		.L300
  00000259 07  c801            1583 		.uleb128	200
  0000025b 07  7531 3649 6e64  1584 		.byte		"u16Index"
  00000261 07  6578                 	
  00000263 07  00              1585 		.byte		0
  00000264 07  0000 0000       1586 		.4byte		.L335
  00000268 07  0000 0000       1587 		.4byte		.L338
  0000026c 07  03              1588 		.sleb128	3
  0000026d 07  0000 0001       1589 		.4byte		.L300
  00000271 07  c901            1590 		.uleb128	201
  00000273 07  6553 696d 706c  1591 		.byte		"eSimpleStateValue"
  00000279 07  6553 7461 7465       	
  0000027f 07  5661 6c75 65         	
  00000284 07  00              1592 		.byte		0
  00000285 07  0000 0000       1593 		.4byte		.L339
  00000289 07  0000 0000       1594 		.4byte		.L342
  0000028d 07  03              1595 		.sleb128	3
  0000028e 07  0000 0001       1596 		.4byte		.L300
  00000292 07  ca01            1597 		.uleb128	202
  00000294 07  6544 6567 7261  1598 		.byte		"eDegradationStateValue"
  0000029a 07  6461 7469 6f6e       	
  000002a0 07  5374 6174 6556       	
  000002a6 07  616c 7565            	
  000002aa 07  00              1599 		.byte		0
  000002ab 07  0000 0000       1600 		.4byte		.L343
  000002af 07  0000 0000       1601 		.4byte		.L346
                               1602 	.L347:
  000002b3 07  04              1603 		.sleb128	4
  000002b4 07  0000 0001       1604 		.4byte		.L300
  000002b8 07  cc01            1605 		.uleb128	204
  000002ba 07  7331 3652 6574  1606 		.byte		"s16Ret"
  000002c0 07  00              1607 		.byte		0
  000002c1 07  0000 0000       1608 		.4byte		.L301
  000002c5 07  0000 0000       1609 		.4byte		.L348
                               1610 		.section	.debug_info,,n
  000002c9 07  00              1611 		.sleb128	0
                               1612 	.L331:
                               1613 		.section	.debug_info,,n
                               1614 	.L353:
  000002ca 07  02              1615 		.sleb128	2
  000002cb 07  0000 03c0       1616 		.4byte		.L350-.L2
  000002cf 07  7331 3644 6961  1617 		.byte		"s16DiagDsmAlNvMem_GetNvMemBackupStatus"
  000002d5 07  6744 736d 416c       	
  000002db 07  4e76 4d65 6d5f       	
  000002e1 07  4765 744e 764d       	
  000002e7 07  656d 4261 636b       	
  000002ed 07  7570                 	
  000002f5 07  00              1618 		.byte		0
  000002f6 07  0000 0001       1619 		.4byte		.L300
  000002fa 07  de01            1620 		.uleb128	222
  000002fc 07  0000 0000       1621 		.4byte		.L301
  00000300 07  01              1622 		.byte		0x1
  00000301 07  01              1623 		.byte		0x1
  00000302 07  0000 0000       1624 		.4byte		.L351
  00000306 07  0000 0000       1625 		.4byte		.L352
  0000030a 07  03              1626 		.sleb128	3
  0000030b 07  0000 0001       1627 		.4byte		.L300
  0000030f 07  de01            1628 		.uleb128	222
  00000311 07  7062 6f42 6163  1629 		.byte		"pboBackupAvailable"
  00000317 07  6b75 7041 7661       	
  0000031d 07  696c 6162 6c65       	
  00000323 07  00              1630 		.byte		0
  00000324 07  0000 0000       1631 		.4byte		.L354
  00000328 07  0000 0000       1632 		.4byte		.L358
  0000032c 07  03              1633 		.sleb128	3
  0000032d 07  0000 0001       1634 		.4byte		.L300
  00000331 07  df01            1635 		.uleb128	223
  00000333 07  7075 3332 4469  1636 		.byte		"pu32DiagDsmNvMemFormatVersion"
  00000339 07  6167 4473 6d4e       	
  0000033f 07  764d 656d 466f       	
  00000345 07  726d 6174 5665       	
  0000034b 07  7273 696f 6e         	
  00000350 07  00              1637 		.byte		0
  00000351 07  0000 0000       1638 		.4byte		.L359
  00000355 07  0000 0000       1639 		.4byte		.L361
                               1640 	.L362:
  00000359 07  04              1641 		.sleb128	4
  0000035a 07  0000 0001       1642 		.4byte		.L300
  0000035e 07  e101            1643 		.uleb128	225
  00000360 07  7331 3652 6574  1644 		.byte		"s16Ret"
  00000366 07  00              1645 		.byte		0
  00000367 07  0000 0000       1646 		.4byte		.L301
  0000036b 07  0000 0000       1647 		.4byte		.L363
                               1648 	.L364:
  0000036f 07  04              1649 		.sleb128	4
  00000370 07  0000 0001       1650 		.4byte		.L300
  00000374 07  e201            1651 		.uleb128	226
  00000376 07  7533 3243 616c  1652 		.byte		"u32CalculatedSimpleRCCRC"
  0000037c 07  6375 6c61 7465       	
  00000382 07  6453 696d 706c       	
  00000388 07  6552 4343 5243       	
  0000038e 07  00              1653 		.byte		0
  0000038f 07  0000 0000       1654 		.4byte		.L305
  00000393 07  0000 0000       1655 		.4byte		.L365
                               1656 	.L366:
  00000397 07  04              1657 		.sleb128	4
  00000398 07  0000 0001       1658 		.4byte		.L300
  0000039c 07  e301            1659 		.uleb128	227
  0000039e 07  7533 3243 616c  1660 		.byte		"u32CalculatedDetailRCCRC"
  000003a4 07  6375 6c61 7465       	
  000003aa 07  6444 6574 6169       	
  000003b0 07  6c52 4343 5243       	
  000003b6 07  00              1661 		.byte		0
  000003b7 07  0000 0000       1662 		.4byte		.L305
  000003bb 07  0000 0000       1663 		.4byte		.L367
                               1664 		.section	.debug_info,,n
  000003bf 07  00              1665 		.sleb128	0
                               1666 	.L350:
                               1667 		.section	.debug_info,,n
                               1668 	.L373:
  000003c0 07  02              1669 		.sleb128	2
  000003c1 07  0000 0472       1670 		.4byte		.L370-.L2
  000003c5 07  7331 3644 6961  1671 		.byte		"s16DiagDsmAlNvMem_GetSingleEntry"
  000003cb 07  6744 736d 416c       	
  000003d1 07  4e76 4d65 6d5f       	
  000003d7 07  4765 7453 696e       	
  000003dd 07  676c 6545 6e74       	
  000003e3 07  7279                 	
  000003e5 07  00              1672 		.byte		0
  000003e6 07  0000 0001       1673 		.4byte		.L300
  000003ea 07  9302            1674 		.uleb128	275
  000003ec 07  0000 0000       1675 		.4byte		.L301
  000003f0 07  01              1676 		.byte		0x1
  000003f1 07  01              1677 		.byte		0x1
  000003f2 07  0000 0000       1678 		.4byte		.L371
  000003f6 07  0000 0000       1679 		.4byte		.L372
  000003fa 07  03              1680 		.sleb128	3
  000003fb 07  0000 0001       1681 		.4byte		.L300
  000003ff 07  9302            1682 		.uleb128	275
  00000401 07  7531 3649 6e64  1683 		.byte		"u16Index"
  00000407 07  6578                 	
  00000409 07  00              1684 		.byte		0
  0000040a 07  0000 0000       1685 		.4byte		.L335
  0000040e 07  0000 0000       1686 		.4byte		.L374
  00000412 07  03              1687 		.sleb128	3
  00000413 07  0000 0001       1688 		.4byte		.L300
  00000417 07  9402            1689 		.uleb128	276
  00000419 07  7065 5369 6d70  1690 		.byte		"peSimpleStateValue"
  0000041f 07  6c65 5374 6174       	
  00000425 07  6556 616c 7565       	
  0000042b 07  00              1691 		.byte		0
  0000042c 07  0000 0000       1692 		.4byte		.L375
  00000430 07  0000 0000       1693 		.4byte		.L377
  00000434 07  03              1694 		.sleb128	3
  00000435 07  0000 0001       1695 		.4byte		.L300
  00000439 07  9502            1696 		.uleb128	277
  0000043b 07  7065 4465 6772  1697 		.byte		"peDegradationStateValue"
  00000441 07  6164 6174 696f       	
  00000447 07  6e53 7461 7465       	
  0000044d 07  5661 6c75 65         	
  00000452 07  00              1698 		.byte		0
  00000453 07  0000 0000       1699 		.4byte		.L378
  00000457 07  0000 0000       1700 		.4byte		.L380
                               1701 	.L381:
  0000045b 07  04              1702 		.sleb128	4
  0000045c 07  0000 0001       1703 		.4byte		.L300
  00000460 07  9702            1704 		.uleb128	279
  00000462 07  7331 3652 6574  1705 		.byte		"s16Ret"
  00000468 07  00              1706 		.byte		0
  00000469 07  0000 0000       1707 		.4byte		.L301
  0000046d 07  0000 0000       1708 		.4byte		.L382
                               1709 		.section	.debug_info,,n
  00000471 07  00              1710 		.sleb128	0
                               1711 	.L370:
                               1712 		.section	.debug_info,,n
                               1713 	.L387:
  00000472 07  02              1714 		.sleb128	2
  00000473 07  0000 0541       1715 		.4byte		.L384-.L2
  00000477 07  7331 3644 6961  1716 		.byte		"s16DiagDsmAlNvMem_UpdateSingleE"
  0000047d 07  6744 736d 416c       	
  00000483 07  4e76 4d65 6d5f       	
  00000489 07  5570 6461 7465       	
  0000048f 07  5369 6e67 6c65       	
  00000495 07  45                   	
  00000496 07  00              1717 		.byte		0
  00000497 07  0000 0001       1718 		.4byte		.L300
  0000049b 07  aa02            1719 		.uleb128	298
  0000049d 07  0000 0000       1720 		.4byte		.L301
  000004a1 07  01              1721 		.byte		0x1
  000004a2 07  01              1722 		.byte		0x1
  000004a3 07  0000 0000       1723 		.4byte		.L385
  000004a7 07  0000 0000       1724 		.4byte		.L386
  000004ab 07  03              1725 		.sleb128	3
  000004ac 07  0000 0001       1726 		.4byte		.L300
  000004b0 07  aa02            1727 		.uleb128	298
  000004b2 07  7531 3649 6e64  1728 		.byte		"u16Index"
  000004b8 07  6578                 	
  000004ba 07  00              1729 		.byte		0
  000004bb 07  0000 0000       1730 		.4byte		.L335
  000004bf 07  0000 0000       1731 		.4byte		.L388
  000004c3 07  03              1732 		.sleb128	3
  000004c4 07  0000 0001       1733 		.4byte		.L300
  000004c8 07  ab02            1734 		.uleb128	299
  000004ca 07  6553 696d 706c  1735 		.byte		"eSimpleStateValue"
  000004d0 07  6553 7461 7465       	
  000004d6 07  5661 6c75 65         	
  000004db 07  00              1736 		.byte		0
  000004dc 07  0000 0000       1737 		.4byte		.L339
  000004e0 07  0000 0000       1738 		.4byte		.L389
  000004e4 07  03              1739 		.sleb128	3
  000004e5 07  0000 0001       1740 		.4byte		.L300
  000004e9 07  ac02            1741 		.uleb128	300
  000004eb 07  6544 6567 7261  1742 		.byte		"eDegradationStateValue"
  000004f1 07  6461 7469 6f6e       	
  000004f7 07  5374 6174 6556       	
  000004fd 07  616c 7565            	
  00000501 07  00              1743 		.byte		0
  00000502 07  0000 0000       1744 		.4byte		.L343
  00000506 07  0000 0000       1745 		.4byte		.L390
  0000050a 07  03              1746 		.sleb128	3
  0000050b 07  0000 0001       1747 		.4byte		.L300
  0000050f 07  ad02            1748 		.uleb128	301
  00000511 07  6353 696d 706c  1749 		.byte		"cSimpleRootCause"
  00000517 07  6552 6f6f 7443       	
  0000051d 07  6175 7365            	
  00000521 07  00              1750 		.byte		0
  00000522 07  0000 0000       1751 		.4byte		.L391
  00000526 07  0000 0000       1752 		.4byte		.L394
                               1753 	.L395:
  0000052a 07  04              1754 		.sleb128	4
  0000052b 07  0000 0001       1755 		.4byte		.L300
  0000052f 07  af02            1756 		.uleb128	303
  00000531 07  7331 3652 6574  1757 		.byte		"s16Ret"
  00000537 07  00              1758 		.byte		0
  00000538 07  0000 0000       1759 		.4byte		.L301
  0000053c 07  0000 0000       1760 		.4byte		.L396
                               1761 		.section	.debug_info,,n
  00000540 07  00              1762 		.sleb128	0
                               1763 	.L384:
                               1764 		.section	.debug_info,,n
                               1765 	.L401:
  00000541 07  02              1766 		.sleb128	2
  00000542 07  0000 0610       1767 		.4byte		.L398-.L2
  00000546 07  7331 3644 6961  1768 		.byte		"s16DiagDsmAlNvMem_GetSingleE"
  0000054c 07  6744 736d 416c       	
  00000552 07  4e76 4d65 6d5f       	
  00000558 07  4765 7453 696e       	
  0000055e 07  676c 6545            	
  00000562 07  00              1769 		.byte		0
  00000563 07  0000 0001       1770 		.4byte		.L300
  00000567 07  c302            1771 		.uleb128	323
  00000569 07  0000 0000       1772 		.4byte		.L301
  0000056d 07  01              1773 		.byte		0x1
  0000056e 07  01              1774 		.byte		0x1
  0000056f 07  0000 0000       1775 		.4byte		.L399
  00000573 07  0000 0000       1776 		.4byte		.L400
  00000577 07  03              1777 		.sleb128	3
  00000578 07  0000 0001       1778 		.4byte		.L300
  0000057c 07  c302            1779 		.uleb128	323
  0000057e 07  7531 3649 6e64  1780 		.byte		"u16Index"
  00000584 07  6578                 	
  00000586 07  00              1781 		.byte		0
  00000587 07  0000 0000       1782 		.4byte		.L335
  0000058b 07  0000 0000       1783 		.4byte		.L402
  0000058f 07  03              1784 		.sleb128	3
  00000590 07  0000 0001       1785 		.4byte		.L300
  00000594 07  c302            1786 		.uleb128	323
  00000596 07  7065 5369 6d70  1787 		.byte		"peSimpleStateValue"
  0000059c 07  6c65 5374 6174       	
  000005a2 07  6556 616c 7565       	
  000005a8 07  00              1788 		.byte		0
  000005a9 07  0000 0000       1789 		.4byte		.L375
  000005ad 07  0000 0000       1790 		.4byte		.L403
  000005b1 07  03              1791 		.sleb128	3
  000005b2 07  0000 0001       1792 		.4byte		.L300
  000005b6 07  c402            1793 		.uleb128	324
  000005b8 07  7065 4465 6772  1794 		.byte		"peDegradationStateValue"
  000005be 07  6164 6174 696f       	
  000005c4 07  6e53 7461 7465       	
  000005ca 07  5661 6c75 65         	
  000005cf 07  00              1795 		.byte		0
  000005d0 07  0000 0000       1796 		.4byte		.L378
  000005d4 07  0000 0000       1797 		.4byte		.L404
  000005d8 07  03              1798 		.sleb128	3
  000005d9 07  0000 0001       1799 		.4byte		.L300
  000005dd 07  c502            1800 		.uleb128	325
  000005df 07  7063 5369 6d70  1801 		.byte		"pcSimpleRootCause"
  000005e5 07  6c65 526f 6f74       	
  000005eb 07  4361 7573 65         	
  000005f0 07  00              1802 		.byte		0
  000005f1 07  0000 0000       1803 		.4byte		.L405
  000005f5 07  0000 0000       1804 		.4byte		.L407
                               1805 	.L408:
  000005f9 07  04              1806 		.sleb128	4
  000005fa 07  0000 0001       1807 		.4byte		.L300
  000005fe 07  c702            1808 		.uleb128	327
  00000600 07  7331 3652 6574  1809 		.byte		"s16Ret"
  00000606 07  00              1810 		.byte		0
  00000607 07  0000 0000       1811 		.4byte		.L301
  0000060b 07  0000 0000       1812 		.4byte		.L409
                               1813 		.section	.debug_info,,n
  0000060f 07  00              1814 		.sleb128	0
                               1815 	.L398:
                               1816 		.section	.debug_info,,n
                               1817 	.L414:
  00000610 07  02              1818 		.sleb128	2
  00000611 07  0000 0687       1819 		.4byte		.L411-.L2
  00000615 07  7331 3644 6961  1820 		.byte		"s16DiagDsmAlNvMem_GetDtldRcTbl"
  0000061b 07  6744 736d 416c       	
  00000621 07  4e76 4d65 6d5f       	
  00000627 07  4765 7444 746c       	
  0000062d 07  6452 6354 626c       	
  00000633 07  00              1821 		.byte		0
  00000634 07  0000 0001       1822 		.4byte		.L300
  00000638 07  db02            1823 		.uleb128	347
  0000063a 07  0000 0000       1824 		.4byte		.L301
  0000063e 07  01              1825 		.byte		0x1
  0000063f 07  01              1826 		.byte		0x1
  00000640 07  0000 0000       1827 		.4byte		.L412
  00000644 07  0000 0000       1828 		.4byte		.L413
  00000648 07  03              1829 		.sleb128	3
  00000649 07  0000 0001       1830 		.4byte		.L300
  0000064d 07  db02            1831 		.uleb128	347
  0000064f 07  7063 4465 7461  1832 		.byte		"pcDetailedRootCauseTable"
  00000655 07  696c 6564 526f       	
  0000065b 07  6f74 4361 7573       	
  00000661 07  6554 6162 6c65       	
  00000667 07  00              1833 		.byte		0
  00000668 07  0000 0000       1834 		.4byte		.L415
  0000066c 07  0000 0000       1835 		.4byte		.L420
                               1836 	.L421:
  00000670 07  04              1837 		.sleb128	4
  00000671 07  0000 0001       1838 		.4byte		.L300
  00000675 07  dd02            1839 		.uleb128	349
  00000677 07  7331 3652 6574  1840 		.byte		"s16Ret"
  0000067d 07  00              1841 		.byte		0
  0000067e 07  0000 0000       1842 		.4byte		.L301
  00000682 07  0000 0000       1843 		.4byte		.L422
                               1844 		.section	.debug_info,,n
  00000686 07  00              1845 		.sleb128	0
                               1846 	.L411:
                               1847 		.section	.debug_info,,n
                               1848 	.L428:
  00000687 07  02              1849 		.sleb128	2
  00000688 07  0000 075c       1850 		.4byte		.L425-.L2
  0000068c 07  7331 3644 6961  1851 		.byte		"s16DiagDsmAlNvMem_SetDtldRcTbl"
  00000692 07  6744 736d 416c       	
  00000698 07  4e76 4d65 6d5f       	
  0000069e 07  5365 7444 746c       	
  000006a4 07  6452 6354 626c       	
  000006aa 07  00              1852 		.byte		0
  000006ab 07  0000 0001       1853 		.4byte		.L300
  000006af 07  f602            1854 		.uleb128	374
  000006b1 07  0000 0000       1855 		.4byte		.L301
  000006b5 07  01              1856 		.byte		0x1
  000006b6 07  01              1857 		.byte		0x1
  000006b7 07  0000 0000       1858 		.4byte		.L426
  000006bb 07  0000 0000       1859 		.4byte		.L427
  000006bf 07  03              1860 		.sleb128	3
  000006c0 07  0000 0001       1861 		.4byte		.L300
  000006c4 07  f602            1862 		.uleb128	374
  000006c6 07  7063 4465 7461  1863 		.byte		"pcDetailedRootCauseTable"
  000006cc 07  696c 6564 526f       	
  000006d2 07  6f74 4361 7573       	
  000006d8 07  6554 6162 6c65       	
  000006de 07  00              1864 		.byte		0
  000006df 07  0000 0000       1865 		.4byte		.L415
  000006e3 07  0000 0000       1866 		.4byte		.L429
                               1867 	.L430:
  000006e7 07  04              1868 		.sleb128	4
  000006e8 07  0000 0001       1869 		.4byte		.L300
  000006ec 07  f802            1870 		.uleb128	376
  000006ee 07  7331 3652 6574  1871 		.byte		"s16Ret"
  000006f4 07  00              1872 		.byte		0
  000006f5 07  0000 0000       1873 		.4byte		.L301
  000006f9 07  0000 0000       1874 		.4byte		.L431
                               1875 	.L432:
  000006fd 07  04              1876 		.sleb128	4
  000006fe 07  0000 0001       1877 		.4byte		.L300
  00000702 07  f902            1878 		.uleb128	377
  00000704 07  7533 3243 616c  1879 		.byte		"u32CalculatedCRC"
  0000070a 07  6375 6c61 7465       	
  00000710 07  6443 5243            	
  00000714 07  00              1880 		.byte		0
  00000715 07  0000 0000       1881 		.4byte		.L305
  00000719 07  0000 0000       1882 		.4byte		.L433
                               1883 	.L434:
  0000071d 07  04              1884 		.sleb128	4
  0000071e 07  0000 0001       1885 		.4byte		.L300
  00000722 07  fc02            1886 		.uleb128	380
  00000724 07  7075 3332 4469  1887 		.byte		"pu32DiagDsmDetailRCData"
  0000072a 07  6167 4473 6d44       	
  00000730 07  6574 6169 6c52       	
  00000736 07  4344 6174 61         	
  0000073b 07  00              1888 		.byte		0
  0000073c 07  0000 0000       1889 		.4byte		.L360
  00000740 07  0000 0000       1890 		.4byte		.L435
                               1891 	.L436:
  00000744 07  05              1892 		.sleb128	5
  00000745 07  0000 0001       1893 		.4byte		.L300
  00000749 07  fd02            1894 		.uleb128	381
  0000074b 07  6553 7461 7475  1895 		.byte		"eStatus"
  00000751 07  73                   	
  00000752 07  00              1896 		.byte		0
  00000753 07  0000 0000       1897 		.4byte		.L311
  00000757 07  03              1898 		.sleb128	3
  00000758 07  92              1899 		.byte		0x92
  00000759 07  01              1900 		.uleb128	1
  0000075a 07  08              1901 		.sleb128	8
                               1902 		.section	.debug_info,,n
  0000075b 07  00              1903 		.sleb128	0
                               1904 	.L425:
                               1905 		.section	.debug_info,,n
                               1906 	.L438:
  0000075c 07  06              1907 		.sleb128	6
  0000075d 07  01              1908 		.byte		0x1
  0000075e 07  01              1909 		.byte		0x1
  0000075f 07  0000 0003       1910 		.4byte		.L439
  00000763 07  31              1911 		.uleb128	49
  00000764 07  7538 4453 4d5f  1912 		.byte		"u8DSM_MyPoffUsrArea"
  0000076a 07  4d79 506f 6666       	
  00000770 07  5573 7241 7265       	
  00000776 07  61                   	
  00000777 07  00              1913 		.byte		0
  00000778 07  0000 0000       1914 		.4byte		.L440
                               1915 		.section	.debug_info,,n
                               1916 	.L441:
  0000077c 07  05              1917 		.sleb128	5
  0000077d 07  0000 0001       1918 		.4byte		.L300
  00000781 07  72              1919 		.uleb128	114
  00000782 07  6344 6961 6744  1920 		.byte		"cDiagDsmAlData"
  00000788 07  736d 416c 4461       	
  0000078e 07  7461                 	
  00000790 07  00              1921 		.byte		0
  00000791 07  0000 0000       1922 		.4byte		.L442
  00000795 07  05              1923 		.sleb128	5
  00000796 07  03              1924 		.byte		0x3
  00000797 07  0000 0000       1925 		.4byte		cDiagDsmAlData
                               1926 		.section	.debug_info,,n
                               1927 		.section	.debug_info,,n
                               1928 	.L444:
  0000079b 07  05              1929 		.sleb128	5
  0000079c 07  0000 0001       1930 		.4byte		.L300
  000007a0 07  71              1931 		.uleb128	113
  000007a1 07  7533 3244 6961  1932 		.byte		"u32DiagDsmAlPrevDsmFormatVer"
  000007a7 07  6744 736d 416c       	
  000007ad 07  5072 6576 4473       	
  000007b3 07  6d46 6f72 6d61       	
  000007b9 07  7456 6572            	
  000007bd 07  00              1933 		.byte		0
  000007be 07  0000 0000       1934 		.4byte		.L305
  000007c2 07  05              1935 		.sleb128	5
  000007c3 07  03              1936 		.byte		0x3
  000007c4 07  0000 0000       1937 		.4byte		u32DiagDsmAlPrevDsmFormatVer
                               1938 		.section	.debug_info,,n
                               1939 	.L443:
  000007c8 07  07              1940 		.sleb128	7
  000007c9 07  0000 0868       1941 		.4byte		.L445-.L2
  000007cd 07  fc03            1942 		.uleb128	508
                               1943 		.section	.debug_info,,n
                               1944 	.L228:
  000007cf 07  08              1945 		.sleb128	8
  000007d0 07  7533 3244 736d  1946 		.byte		"u32DsmNvMemFormatVer"
  000007d6 07  4e76 4d65 6d46       	
  000007dc 07  6f72 6d61 7456       	
  000007e2 07  6572                 	
  000007e4 07  00              1947 		.byte		0
  000007e5 07  0000 0000       1948 		.4byte		.L305
  000007e9 07  02              1949 		.sleb128	2
  000007ea 07  23              1950 		.byte		0x23
  000007eb 07  00              1951 		.uleb128	0
                               1952 	.L229:
  000007ec 07  08              1953 		.sleb128	8
  000007ed 07  6163 4469 6167  1954 		.byte		"acDiagDsmAlSimpleRCData"
  000007f3 07  4473 6d41 6c53       	
  000007f9 07  696d 706c 6552       	
  000007ff 07  4344 6174 61         	
  00000804 07  00              1955 		.byte		0
  00000805 07  0000 0000       1956 		.4byte		.L446
  00000809 07  02              1957 		.sleb128	2
  0000080a 07  23              1958 		.byte		0x23
  0000080b 07  04              1959 		.uleb128	4
                               1960 	.L230:
  0000080c 07  08              1961 		.sleb128	8
  0000080d 07  7533 3244 736d  1962 		.byte		"u32DsmAlSimpleRCDataCRC"
  00000813 07  416c 5369 6d70       	
  00000819 07  6c65 5243 4461       	
  0000081f 07  7461 4352 43         	
  00000824 07  00              1963 		.byte		0
  00000825 07  0000 0000       1964 		.4byte		.L305
  00000829 07  02              1965 		.sleb128	2
  0000082a 07  23              1966 		.byte		0x23
  0000082b 07  64              1967 		.uleb128	100
                               1968 	.L231:
  0000082c 07  08              1969 		.sleb128	8
  0000082d 07  6175 3332 4473  1970 		.byte		"au32DsmAlDetailRC"
  00000833 07  6d41 6c44 6574       	
  00000839 07  6169 6c52 43         	
  0000083e 07  00              1971 		.byte		0
  0000083f 07  0000 0000       1972 		.4byte		.L450
  00000843 07  02              1973 		.sleb128	2
  00000844 07  23              1974 		.byte		0x23
  00000845 07  68              1975 		.uleb128	104
                               1976 	.L232:
  00000846 07  08              1977 		.sleb128	8
  00000847 07  7533 3244 736d  1978 		.byte		"u32DsmAlDetailRCDataCRC"
  0000084d 07  416c 4465 7461       	
  00000853 07  696c 5243 4461       	
  00000859 07  7461 4352 43         	
  0000085e 07  00              1979 		.byte		0
  0000085f 07  0000 0000       1980 		.4byte		.L305
  00000863 07  03              1981 		.sleb128	3
  00000864 07  23              1982 		.byte		0x23
  00000865 07  f803            1983 		.uleb128	504
  00000867 07  00              1984 		.sleb128	0
                               1985 	.L445:
                               1986 	.L449:
  00000868 07  07              1987 		.sleb128	7
  00000869 07  0000 08e3       1988 		.4byte		.L452-.L2
  0000086d 07  01              1989 		.uleb128	1
                               1990 		.section	.debug_info,,n
                               1991 	.L224:
  0000086e 07  09              1992 		.sleb128	9
  0000086f 07  7538 5369 6d70  1993 		.byte		"u8SimpleStateValue"
  00000875 07  6c65 5374 6174       	
  0000087b 07  6556 616c 7565       	
  00000881 07  00              1994 		.byte		0
  00000882 07  0000 0000       1995 		.4byte		.L357
  00000886 07  04              1996 		.uleb128	4
  00000887 07  01              1997 		.byte		0x1
  00000888 07  00              1998 		.byte		0x0
  00000889 07  02              1999 		.sleb128	2
  0000088a 07  23              2000 		.byte		0x23
  0000088b 07  00              2001 		.uleb128	0
                               2002 	.L225:
  0000088c 07  09              2003 		.sleb128	9
  0000088d 07  7538 4465 6772  2004 		.byte		"u8DegradationStateValue"
  00000893 07  6164 6174 696f       	
  00000899 07  6e53 7461 7465       	
  0000089f 07  5661 6c75 65         	
  000008a4 07  00              2005 		.byte		0
  000008a5 07  0000 0000       2006 		.4byte		.L357
  000008a9 07  04              2007 		.uleb128	4
  000008aa 07  01              2008 		.byte		0x1
  000008ab 07  01              2009 		.byte		0x1
  000008ac 07  02              2010 		.sleb128	2
  000008ad 07  23              2011 		.byte		0x23
  000008ae 07  00              2012 		.uleb128	0
                               2013 	.L226:
  000008af 07  09              2014 		.sleb128	9
  000008b0 07  7538 5369 6d70  2015 		.byte		"u8SimpleRootCause"
  000008b6 07  6c65 526f 6f74       	
  000008bc 07  4361 7573 65         	
  000008c1 07  00              2016 		.byte		0
  000008c2 07  0000 0000       2017 		.4byte		.L357
  000008c6 07  04              2018 		.uleb128	4
  000008c7 07  05              2019 		.byte		0x5
  000008c8 07  02              2020 		.byte		0x2
  000008c9 07  02              2021 		.sleb128	2
  000008ca 07  23              2022 		.byte		0x23
  000008cb 07  00              2023 		.uleb128	0
                               2024 	.L227:
  000008cc 07  09              2025 		.sleb128	9
  000008cd 07  7538 5265 7365  2026 		.byte		"u8Reserved"
  000008d3 07  7276 6564            	
  000008d7 07  00              2027 		.byte		0
  000008d8 07  0000 0000       2028 		.4byte		.L357
  000008dc 07  04              2029 		.uleb128	4
  000008dd 07  01              2030 		.byte		0x1
  000008de 07  07              2031 		.byte		0x7
  000008df 07  02              2032 		.sleb128	2
  000008e0 07  23              2033 		.byte		0x23
  000008e1 07  00              2034 		.uleb128	0
  000008e2 07  00              2035 		.sleb128	0
                               2036 	.L452:
                               2037 		.section	.debug_info,,n
                               2038 	.L312:
  000008e3 07  0a              2039 		.sleb128	10
  000008e4 07  0000 0960       2040 		.4byte		.L453-.L2
  000008e8 07  04              2041 		.uleb128	4
                               2042 		.section	.debug_info,,n
  000008e9 07  0b              2043 		.sleb128	11
  000008ea 07  654e 564d 5f53  2044 		.byte		"eNVM_STATUS_OPERATION_INIT"
  000008f0 07  5441 5455 535f       	
  000008f6 07  4f50 4552 4154       	
  000008fc 07  494f 4e5f 494e       	
  00000902 07  4954                 	
  00000904 07  00              2045 		.byte		0
  00000905 07  00              2046 		.sleb128	0
  00000906 07  0b              2047 		.sleb128	11
  00000907 07  654e 564d 5f53  2048 		.byte		"eNVM_STATUS_OPERATION_BUSY"
  0000090d 07  5441 5455 535f       	
  00000913 07  4f50 4552 4154       	
  00000919 07  494f 4e5f 4255       	
  0000091f 07  5359                 	
  00000921 07  00              2049 		.byte		0
  00000922 07  01              2050 		.sleb128	1
  00000923 07  0b              2051 		.sleb128	11
  00000924 07  654e 564d 5f53  2052 		.byte		"eNVM_STATUS_OPERATION_DONE"
  0000092a 07  5441 5455 535f       	
  00000930 07  4f50 4552 4154       	
  00000936 07  494f 4e5f 444f       	
  0000093c 07  4e45                 	
  0000093e 07  00              2053 		.byte		0
  0000093f 07  02              2054 		.sleb128	2
  00000940 07  0b              2055 		.sleb128	11
  00000941 07  654e 564d 5f53  2056 		.byte		"eNVM_STATUS_OPERATION_FAILED"
  00000947 07  5441 5455 535f       	
  0000094d 07  4f50 4552 4154       	
  00000953 07  494f 4e5f 4641       	
  00000959 07  494c 4544            	
  0000095d 07  00              2057 		.byte		0
  0000095e 07  03              2058 		.sleb128	3
  0000095f 07  00              2059 		.sleb128	0
                               2060 	.L453:
                               2061 		.section	.debug_info,,n
                               2062 	.L345:
  00000960 07  0c              2063 		.sleb128	12
  00000961 07  0000 0002       2064 		.4byte		.L454
  00000965 07  be02            2065 		.uleb128	318
  00000967 07  0000 09e6       2066 		.4byte		.L455-.L2
  0000096b 07  455f 4449 4147  2067 		.byte		"E_DIAG_DSM_DEGRADATION_STATE_VALUE"
  00000971 07  5f44 534d 5f44       	
  00000977 07  4547 5241 4441       	
  0000097d 07  5449 4f4e 5f53       	
  00000983 07  5441 5445 5f56       	
  00000989 07  414c                 	
  0000098d 07  00              2068 		.byte		0
  0000098e 07  04              2069 		.uleb128	4
  0000098f 07  0b              2070 		.sleb128	11
  00000990 07  6544 4941 475f  2071 		.byte		"eDIAG_DSM_DEGRADED"
  00000996 07  4453 4d5f 4445       	
  0000099c 07  4752 4144 4544       	
  000009a2 07  00              2072 		.byte		0
  000009a3 07  00              2073 		.sleb128	0
  000009a4 07  0b              2074 		.sleb128	11
  000009a5 07  6544 4941 475f  2075 		.byte		"eDIAG_DSM_NOT_DEGRADED"
  000009ab 07  4453 4d5f 4e4f       	
  000009b1 07  545f 4445 4752       	
  000009b7 07  4144 4544            	
  000009bb 07  00              2076 		.byte		0
  000009bc 07  01              2077 		.sleb128	1
  000009bd 07  0b              2078 		.sleb128	11
  000009be 07  6544 4941 475f  2079 		.byte		"eDIAG_DSM_NUM_DEGRADATION_STATE_VALUE"
  000009c4 07  4453 4d5f 4e55       	
  000009ca 07  4d5f 4445 4752       	
  000009d0 07  4144 4154 494f       	
  000009d6 07  4e5f 5354 4154       	
  000009dc 07  455f                 	
  000009e3 07  00              2080 		.byte		0
  000009e4 07  02              2081 		.sleb128	2
  000009e5 07  00              2082 		.sleb128	0
                               2083 	.L455:
                               2084 	.L341:
  000009e6 07  0c              2085 		.sleb128	12
  000009e7 07  0000 0002       2086 		.4byte		.L454
  000009eb 07  b002            2087 		.uleb128	304
  000009ed 07  0000 0a67       2088 		.4byte		.L456-.L2
  000009f1 07  455f 4449 4147  2089 		.byte		"E_DIAG_DSM_SIMPLE_STATE_VALUE"
  000009f7 07  5f44 534d 5f53       	
  000009fd 07  494d 504c 455f       	
  00000a03 07  5354 4154 455f       	
  00000a09 07  5641 4c55 45         	
  00000a0e 07  00              2090 		.byte		0
  00000a0f 07  04              2091 		.uleb128	4
  00000a10 07  0b              2092 		.sleb128	11
  00000a11 07  6544 4941 475f  2093 		.byte		"eDIAG_DSM_SIMPLE_SICK"
  00000a17 07  4453 4d5f 5349       	
  00000a1d 07  4d50 4c45 5f53       	
  00000a23 07  4943 4b              	
  00000a26 07  00              2094 		.byte		0
  00000a27 07  00              2095 		.sleb128	0
  00000a28 07  0b              2096 		.sleb128	11
  00000a29 07  6544 4941 475f  2097 		.byte		"eDIAG_DSM_SIMPLE_HEALTHY"
  00000a2f 07  4453 4d5f 5349       	
  00000a35 07  4d50 4c45 5f48       	
  00000a3b 07  4541 4c54 4859       	
  00000a41 07  00              2098 		.byte		0
  00000a42 07  01              2099 		.sleb128	1
  00000a43 07  0b              2100 		.sleb128	11
  00000a44 07  6544 4941 475f  2101 		.byte		"eDIAG_DSM_NUM_SIMPLE_STATE_VALUE"
  00000a4a 07  4453 4d5f 4e55       	
  00000a50 07  4d5f 5349 4d50       	
  00000a56 07  4c45 5f53 5441       	
  00000a5c 07  5445 5f56 414c       	
  00000a62 07  5545                 	
  00000a64 07  00              2102 		.byte		0
  00000a65 07  02              2103 		.sleb128	2
  00000a66 07  00              2104 		.sleb128	0
                               2105 	.L456:
                               2106 		.section	.debug_info,,n
                               2107 	.L302:
  00000a67 07  0d              2108 		.sleb128	13
  00000a68 07  7368 6f72 74    2109 		.byte		"short"
  00000a6d 07  00              2110 		.byte		0
  00000a6e 07  05              2111 		.byte		0x5
  00000a6f 07  02              2112 		.byte		0x2
                               2113 		.section	.debug_info,,n
                               2114 	.L301:
  00000a70 07  0e              2115 		.sleb128	14
  00000a71 07  5331 36         2116 		.byte		"S16"
  00000a74 07  00              2117 		.byte		0
  00000a75 07  0000 0000       2118 		.4byte		.L302
                               2119 	.L306:
  00000a79 07  0d              2120 		.sleb128	13
  00000a7a 07  756e 7369 676e  2121 		.byte		"unsigned long"
  00000a80 07  6564 206c 6f6e       	
  00000a86 07  67                   	
  00000a87 07  00              2122 		.byte		0
  00000a88 07  07              2123 		.byte		0x7
  00000a89 07  04              2124 		.byte		0x4
                               2125 	.L305:
  00000a8a 07  0e              2126 		.sleb128	14
  00000a8b 07  5533 32         2127 		.byte		"U32"
  00000a8e 07  00              2128 		.byte		0
  00000a8f 07  0000 0000       2129 		.4byte		.L306
                               2130 		.section	.debug_info,,n
                               2131 	.L304:
  00000a93 07  0f              2132 		.sleb128	15
  00000a94 07  0000 0000       2133 		.4byte		.L305
                               2134 	.L311:
  00000a98 07  0e              2135 		.sleb128	14
  00000a99 07  455f 4e56 4d5f  2136 		.byte		"E_NVM_OPERATION_STATUS"
  00000a9f 07  4f50 4552 4154       	
  00000aa5 07  494f 4e5f 5354       	
  00000aab 07  4154 5553            	
  00000aaf 07  00              2137 		.byte		0
  00000ab0 07  0000 0000       2138 		.4byte		.L312
                               2139 	.L337:
  00000ab4 07  0d              2140 		.sleb128	13
  00000ab5 07  756e 7369 676e  2141 		.byte		"unsigned short"
  00000abb 07  6564 2073 686f       	
  00000ac1 07  7274                 	
  00000ac3 07  00              2142 		.byte		0
  00000ac4 07  07              2143 		.byte		0x7
  00000ac5 07  02              2144 		.byte		0x2
                               2145 	.L336:
  00000ac6 07  0e              2146 		.sleb128	14
  00000ac7 07  5531 36         2147 		.byte		"U16"
  00000aca 07  00              2148 		.byte		0
  00000acb 07  0000 0000       2149 		.4byte		.L337
                               2150 	.L335:
  00000acf 07  0f              2151 		.sleb128	15
  00000ad0 07  0000 0000       2152 		.4byte		.L336
                               2153 	.L340:
  00000ad4 07  0e              2154 		.sleb128	14
  00000ad5 07  455f 4449 4147  2155 		.byte		"E_DIAG_DSM_SIMPLE_STATE_VALUE"
  00000adb 07  5f44 534d 5f53       	
  00000ae1 07  494d 504c 455f       	
  00000ae7 07  5354 4154 455f       	
  00000aed 07  5641 4c55 45         	
  00000af2 07  00              2156 		.byte		0
  00000af3 07  0000 0000       2157 		.4byte		.L341
                               2158 	.L339:
  00000af7 07  0f              2159 		.sleb128	15
  00000af8 07  0000 0000       2160 		.4byte		.L340
                               2161 	.L344:
  00000afc 07  0e              2162 		.sleb128	14
  00000afd 07  455f 4449 4147  2163 		.byte		"E_DIAG_DSM_DEGRADATION_STATE_VALUE"
  00000b03 07  5f44 534d 5f44       	
  00000b09 07  4547 5241 4441       	
  00000b0f 07  5449 4f4e 5f53       	
  00000b15 07  5441 5445 5f56       	
  00000b1b 07  414c                 	
  00000b1f 07  00              2164 		.byte		0
  00000b20 07  0000 0000       2165 		.4byte		.L345
                               2166 	.L343:
  00000b24 07  0f              2167 		.sleb128	15
  00000b25 07  0000 0000       2168 		.4byte		.L344
                               2169 	.L357:
  00000b29 07  0d              2170 		.sleb128	13
  00000b2a 07  756e 7369 676e  2171 		.byte		"unsigned char"
  00000b30 07  6564 2063 6861       	
  00000b36 07  72                   	
  00000b37 07  00              2172 		.byte		0
  00000b38 07  08              2173 		.byte		0x8
  00000b39 07  01              2174 		.byte		0x1
                               2175 	.L356:
  00000b3a 07  0e              2176 		.sleb128	14
  00000b3b 07  424f 4f4c 4541  2177 		.byte		"BOOLEAN"
  00000b41 07  4e                   	
  00000b42 07  00              2178 		.byte		0
  00000b43 07  0000 0000       2179 		.4byte		.L357
                               2180 		.section	.debug_info,,n
                               2181 	.L355:
  00000b47 07  10              2182 		.sleb128	16
  00000b48 07  0000 0000       2183 		.4byte		.L356
                               2184 	.L354:
  00000b4c 07  0f              2185 		.sleb128	15
  00000b4d 07  0000 0000       2186 		.4byte		.L355
                               2187 	.L360:
  00000b51 07  10              2188 		.sleb128	16
  00000b52 07  0000 0000       2189 		.4byte		.L305
                               2190 	.L359:
  00000b56 07  0f              2191 		.sleb128	15
  00000b57 07  0000 0000       2192 		.4byte		.L360
                               2193 	.L376:
  00000b5b 07  10              2194 		.sleb128	16
  00000b5c 07  0000 0000       2195 		.4byte		.L340
                               2196 	.L375:
  00000b60 07  0f              2197 		.sleb128	15
  00000b61 07  0000 0000       2198 		.4byte		.L376
                               2199 	.L379:
  00000b65 07  10              2200 		.sleb128	16
  00000b66 07  0000 0000       2201 		.4byte		.L344
                               2202 	.L378:
  00000b6a 07  0f              2203 		.sleb128	15
  00000b6b 07  0000 0000       2204 		.4byte		.L379
                               2205 	.L393:
  00000b6f 07  0e              2206 		.sleb128	14
  00000b70 07  5538            2207 		.byte		"U8"
  00000b72 07  00              2208 		.byte		0
  00000b73 07  0000 0000       2209 		.4byte		.L357
                               2210 	.L392:
  00000b77 07  0e              2211 		.sleb128	14
  00000b78 07  545f 4449 4147  2212 		.byte		"T_DIAG_DSM_SIMPLE_ROOTCAUSE"
  00000b7e 07  5f44 534d 5f53       	
  00000b84 07  494d 504c 455f       	
  00000b8a 07  524f 4f54 4341       	
  00000b90 07  5553 45              	
  00000b93 07  00              2213 		.byte		0
  00000b94 07  0000 0000       2214 		.4byte		.L393
                               2215 	.L391:
  00000b98 07  0f              2216 		.sleb128	15
  00000b99 07  0000 0000       2217 		.4byte		.L392
                               2218 	.L406:
  00000b9d 07  10              2219 		.sleb128	16
  00000b9e 07  0000 0000       2220 		.4byte		.L392
                               2221 	.L405:
  00000ba2 07  0f              2222 		.sleb128	15
  00000ba3 07  0000 0000       2223 		.4byte		.L406
                               2224 		.section	.debug_info,,n
                               2225 	.L418:
  00000ba7 07  11              2226 		.sleb128	17
  00000ba8 07  0000 0bb4       2227 		.4byte		.L419-.L2
  00000bac 07  0000 0000       2228 		.4byte		.L393
                               2229 		.section	.debug_info,,n
  00000bb0 07  12              2230 		.sleb128	18
  00000bb1 07  8f03            2231 		.uleb128	399
  00000bb3 07  00              2232 		.sleb128	0
                               2233 	.L419:
                               2234 	.L417:
  00000bb4 07  0e              2235 		.sleb128	14
  00000bb5 07  545f 4449 4147  2236 		.byte		"T_DIAG_DSM_DTLDRC_NVMEM_DATA_BUFFER"
  00000bbb 07  5f44 534d 5f44       	
  00000bc1 07  544c 4452 435f       	
  00000bc7 07  4e56 4d45 4d5f       	
  00000bcd 07  4441 5441 5f42       	
  00000bd3 07  5546                 	
  00000bd8 07  00              2237 		.byte		0
  00000bd9 07  0000 0000       2238 		.4byte		.L418
                               2239 	.L416:
  00000bdd 07  10              2240 		.sleb128	16
  00000bde 07  0000 0000       2241 		.4byte		.L417
                               2242 	.L415:
  00000be2 07  0f              2243 		.sleb128	15
  00000be3 07  0000 0000       2244 		.4byte		.L416
                               2245 	.L440:
  00000be7 07  0f              2246 		.sleb128	15
  00000be8 07  0000 0000       2247 		.4byte		.L393
                               2248 	.L442:
  00000bec 07  0e              2249 		.sleb128	14
  00000bed 07  435f 4449 4147  2250 		.byte		"C_DIAG_DSMAL_DATA"
  00000bf3 07  5f44 534d 414c       	
  00000bf9 07  5f44 4154 41         	
  00000bfe 07  00              2251 		.byte		0
  00000bff 07  0000 0000       2252 		.4byte		.L443
                               2253 	.L448:
  00000c03 07  0e              2254 		.sleb128	14
  00000c04 07  435f 4449 4147  2255 		.byte		"C_DIAG_DSMAL_SIMPLE_RC_DATA"
  00000c0a 07  5f44 534d 414c       	
  00000c10 07  5f53 494d 504c       	
  00000c16 07  455f 5243 5f44       	
  00000c1c 07  4154 41              	
  00000c1f 07  00              2256 		.byte		0
  00000c20 07  0000 0000       2257 		.4byte		.L449
                               2258 	.L446:
  00000c24 07  11              2259 		.sleb128	17
  00000c25 07  0000 0c30       2260 		.4byte		.L447-.L2
  00000c29 07  0000 0000       2261 		.4byte		.L448
  00000c2d 07  12              2262 		.sleb128	18
  00000c2e 07  5f              2263 		.uleb128	95
  00000c2f 07  00              2264 		.sleb128	0
                               2265 	.L447:
                               2266 	.L450:
  00000c30 07  11              2267 		.sleb128	17
  00000c31 07  0000 0c3c       2268 		.4byte		.L451-.L2
  00000c35 07  0000 0000       2269 		.4byte		.L305
  00000c39 07  12              2270 		.sleb128	18
  00000c3a 07  63              2271 		.uleb128	99
  00000c3b 07  00              2272 		.sleb128	0
                               2273 	.L451:
                               2274 	.L7:
  00000c3c 07  00              2275 		.sleb128	0
                               2276 	.L3:
                               2277 	
                               2278 		.section	.debug_loc,,n
                               2279 		.align	0
                               2280 	.L307:
  00000000 08  0000 0034 0000  2281 		.d2locreg	%offsetof(.Llo1), %offsetof(.Llo2),31
  00000006 08  0088 0001 6f         	
  0000000b 08  0000 0000 0000  2282 		.d2locend
  00000011 08  0000                 	
                               2283 	.L309:
  00000013 08  0000 0078 0000  2284 		.d2locreg	%offsetof(.Llo3), %offsetof(.Llo4),3
  00000019 08  0084 0001 53         	
  0000001e 08  0000 0088 0000  2285 		.d2locreg	%offsetof(.Llo2), %offsetof(.Llo5),3
  00000024 08  008c 0001 53         	
  00000029 08  0000 0000 0000  2286 		.d2locend
  0000002f 08  0000                 	
                               2287 	.L325:
  00000031 08  0000 0144 0000  2288 		.d2locreg	%offsetof(.Llo6), %offsetof(.Llo7),3
  00000037 08  0148 0001 53         	
  0000003c 08  0000 0000 0000  2289 		.d2locend
  00000042 08  0000                 	
                               2290 	.L327:
  00000044 08  0000 010c 0000  2291 		.d2locreg	%offsetof(.Llo8), %offsetof(.Llo9),3
  0000004a 08  0138 0001 53         	
  0000004f 08  0000 0000 0000  2292 		.d2locend
  00000055 08  0000                 	
                               2293 	.L338:
  00000057 08  0000 015c 0000  2294 		.d2locreg	%offsetof(.Llo10), %offsetof(.Llo11),3
  0000005d 08  0170 0001 53         	
  00000062 08  0000 0174 0000  2295 		.d2locreg	%offsetof(.Llo12), %offsetof(.Llo13),0
  00000068 08  018c 0001 50         	
  0000006d 08  0000 01a8 0000  2296 		.d2locreg	%offsetof(.Llo14), %offsetof(.Llo15),0
  00000073 08  01ac 0001 50         	
  00000078 08  0000 0000 0000  2297 		.d2locend
  0000007e 08  0000                 	
                               2298 	.L342:
  00000080 08  0000 0184 0000  2299 		.d2locreg	%offsetof(.Llo16), %offsetof(.Llo17),4
  00000086 08  0188 0001 54         	
  0000008b 08  0000 0000 0000  2300 		.d2locend
  00000091 08  0000                 	
                               2301 	.L346:
  00000093 08  0000 0178 0000  2302 		.d2locreg	%offsetof(.Llo18), %offsetof(.Llo19),5
  00000099 08  0194 0001 55         	
  0000009e 08  0000 0000 0000  2303 		.d2locend
  000000a4 08  0000                 	
                               2304 	.L348:
  000000a6 08  0000 0194 0000  2305 		.d2locreg	%offsetof(.Llo19), %offsetof(.Llo14),5
  000000ac 08  01a8 0001 55         	
  000000b1 08  0000 01ac 0000  2306 		.d2locreg	%offsetof(.Llo15), %offsetof(.Llo20),5
  000000b7 08  01c0 0001 55         	
  000000bc 08  0000 0000 0000  2307 		.d2locend
  000000c2 08  0000                 	
                               2308 	.L358:
  000000c4 08  0000 01dc 0000  2309 		.d2locreg	%offsetof(.Llo21), %offsetof(.Llo22),3
  000000ca 08  0208 0001 53         	
  000000cf 08  0000 020c 0000  2310 		.d2locreg	%offsetof(.Llo23), %offsetof(.Llo24),31
  000000d5 08  029c 0001 6f         	
  000000da 08  0000 02a8 0000  2311 		.d2locreg	%offsetof(.Llo25), %offsetof(.Llo26),31
  000000e0 08  02ac 0001 6f         	
  000000e5 08  0000 0000 0000  2312 		.d2locend
  000000eb 08  0000                 	
                               2313 	.L361:
  000000ed 08  0000 01dc 0000  2314 		.d2locreg	%offsetof(.Llo21), %offsetof(.Llo22),4
  000000f3 08  0208 0001 54         	
  000000f8 08  0000 020c 0000  2315 		.d2locreg	%offsetof(.Llo23), %offsetof(.Llo26),30
  000000fe 08  02ac 0001 6e         	
  00000103 08  0000 0000 0000  2316 		.d2locend
  00000109 08  0000                 	
                               2317 	.L363:
  0000010b 08  0000 0280 0000  2318 		.d2locreg	%offsetof(.Llo27), %offsetof(.Llo28),3
  00000111 08  0290 0001 53         	
  00000116 08  0000 0298 0000  2319 		.d2locreg	%offsetof(.Llo29), %offsetof(.Llo25),3
  0000011c 08  02a8 0001 53         	
  00000121 08  0000 02ac 0000  2320 		.d2locreg	%offsetof(.Llo26), %offsetof(.Llo30),3
  00000127 08  02b0 0001 53         	
  0000012c 08  0000 0000 0000  2321 		.d2locend
  00000132 08  0000                 	
                               2322 	.L365:
  00000134 08  0000 0230 0000  2323 		.d2locreg	%offsetof(.Llo31), %offsetof(.Llo32),29
  0000013a 08  025c 0001 6d         	
  0000013f 08  0000 0000 0000  2324 		.d2locend
  00000145 08  0000                 	
                               2325 	.L367:
  00000147 08  0000 0250 0000  2326 		.d2locreg	%offsetof(.Llo33), %offsetof(.Llo34),3
  0000014d 08  026c 0001 53         	
  00000152 08  0000 0000 0000  2327 		.d2locend
  00000158 08  0000                 	
                               2328 	.L374:
  0000015a 08  0000 02c4 0000  2329 		.d2locreg	%offsetof(.Llo35), %offsetof(.Llo36),3
  00000160 08  02e4 0001 53         	
  00000165 08  0000 02f0 0000  2330 		.d2locreg	%offsetof(.Llo37), %offsetof(.Llo38),3
  0000016b 08  0300 0001 53         	
  00000170 08  0000 0000 0000  2331 		.d2locend
  00000176 08  0000                 	
                               2332 	.L377:
  00000178 08  0000 02c4 0000  2333 		.d2locreg	%offsetof(.Llo35), %offsetof(.Llo36),4
  0000017e 08  02e4 0001 54         	
  00000183 08  0000 02f0 0000  2334 		.d2locreg	%offsetof(.Llo37), %offsetof(.Llo39),4
  00000189 08  031c 0001 54         	
  0000018e 08  0000 0000 0000  2335 		.d2locend
  00000194 08  0000                 	
                               2336 	.L380:
  00000196 08  0000 02f0 0000  2337 		.d2locreg	%offsetof(.Llo37), %offsetof(.Llo39),5
  0000019c 08  031c 0001 55         	
  000001a1 08  0000 0000 0000  2338 		.d2locend
  000001a7 08  0000                 	
                               2339 	.L382:
  000001a9 08  0000 0300 0000  2340 		.d2locreg	%offsetof(.Llo38), %offsetof(.Llo39),3
  000001af 08  031c 0001 53         	
  000001b4 08  0000 0320 0000  2341 		.d2locreg	%offsetof(.Llo40), %offsetof(.Llo41),3
  000001ba 08  0324 0001 53         	
  000001bf 08  0000 0000 0000  2342 		.d2locend
  000001c5 08  0000                 	
                               2343 	.L388:
  000001c7 08  0000 0334 0000  2344 		.d2locreg	%offsetof(.Llo42), %offsetof(.Llo43),3
  000001cd 08  0348 0001 53         	
  000001d2 08  0000 034c 0000  2345 		.d2locreg	%offsetof(.Llo44), %offsetof(.Llo45),0
  000001d8 08  0364 0001 50         	
  000001dd 08  0000 0390 0000  2346 		.d2locreg	%offsetof(.Llo46), %offsetof(.Llo47),0
  000001e3 08  0394 0001 50         	
  000001e8 08  0000 0000 0000  2347 		.d2locend
  000001ee 08  0000                 	
                               2348 	.L389:
  000001f0 08  0000 035c 0000  2349 		.d2locreg	%offsetof(.Llo48), %offsetof(.Llo49),4
  000001f6 08  0360 0001 54         	
  000001fb 08  0000 0000 0000  2350 		.d2locend
  00000201 08  0000                 	
                               2351 	.L390:
  00000203 08  0000 0364 0000  2352 		.d2locreg	%offsetof(.Llo45), %offsetof(.Llo50),5
  00000209 08  0368 0001 55         	
  0000020e 08  0000 0000 0000  2353 		.d2locend
  00000214 08  0000                 	
                               2354 	.L394:
  00000216 08  0000 0350 0000  2355 		.d2locreg	%offsetof(.Llo51), %offsetof(.Llo52),6
  0000021c 08  0370 0001 56         	
  00000221 08  0000 0000 0000  2356 		.d2locend
  00000227 08  0000                 	
                               2357 	.L396:
  00000229 08  0000 0370 0000  2358 		.d2locreg	%offsetof(.Llo52), %offsetof(.Llo46),6
  0000022f 08  0390 0001 56         	
  00000234 08  0000 0394 0000  2359 		.d2locreg	%offsetof(.Llo47), %offsetof(.Llo53),6
  0000023a 08  03a8 0001 56         	
  0000023f 08  0000 0000 0000  2360 		.d2locend
  00000245 08  0000                 	
                               2361 	.L402:
  00000247 08  0000 03a8 0000  2362 		.d2locreg	%offsetof(.Llo54), %offsetof(.Llo55),3
  0000024d 08  03c8 0001 53         	
  00000252 08  0000 03dc 0000  2363 		.d2locreg	%offsetof(.Llo56), %offsetof(.Llo57),3
  00000258 08  03ec 0001 53         	
  0000025d 08  0000 0000 0000  2364 		.d2locend
  00000263 08  0000                 	
                               2365 	.L403:
  00000265 08  0000 03a8 0000  2366 		.d2locreg	%offsetof(.Llo54), %offsetof(.Llo55),4
  0000026b 08  03c8 0001 54         	
  00000270 08  0000 03dc 0000  2367 		.d2locreg	%offsetof(.Llo56), %offsetof(.Llo58),4
  00000276 08  0414 0001 54         	
  0000027b 08  0000 0000 0000  2368 		.d2locend
  00000281 08  0000                 	
                               2369 	.L404:
  00000283 08  0000 03dc 0000  2370 		.d2locreg	%offsetof(.Llo56), %offsetof(.Llo58),5
  00000289 08  0414 0001 55         	
  0000028e 08  0000 0000 0000  2371 		.d2locend
  00000294 08  0000                 	
                               2372 	.L407:
  00000296 08  0000 03c8 0000  2373 		.d2locreg	%offsetof(.Llo55), %offsetof(.Llo59),6
  0000029c 08  03d8 0001 56         	
  000002a1 08  0000 03dc 0000  2374 		.d2locreg	%offsetof(.Llo56), %offsetof(.Llo58),6
  000002a7 08  0414 0001 56         	
  000002ac 08  0000 0000 0000  2375 		.d2locend
  000002b2 08  0000                 	
                               2376 	.L409:
  000002b4 08  0000 03ec 0000  2377 		.d2locreg	%offsetof(.Llo57), %offsetof(.Llo58),3
  000002ba 08  0414 0001 53         	
  000002bf 08  0000 0418 0000  2378 		.d2locreg	%offsetof(.Llo60), %offsetof(.Llo61),3
  000002c5 08  041c 0001 53         	
  000002ca 08  0000 0000 0000  2379 		.d2locend
  000002d0 08  0000                 	
                               2380 	.L422:
  000002d2 08  0000 044c 0000  2381 		.d2locreg	%offsetof(.Llo62), %offsetof(.Llo63),30
  000002d8 08  0480 0001 6e         	
  000002dd 08  0000 0484 0000  2382 		.d2locreg	%offsetof(.Llo64), %offsetof(.Llo65),3
  000002e3 08  048c 0001 53         	
  000002e8 08  0000 0490 0000  2383 		.d2locreg	%offsetof(.Llo66), %offsetof(.Llo67),3
  000002ee 08  0494 0001 53         	
  000002f3 08  0000 0000 0000  2384 		.d2locend
  000002f9 08  0000                 	
                               2385 	.L420:
  000002fb 08  0000 0000 0000  2386 		.d2locend
  00000301 08  0000                 	
                               2387 	.L431:
  00000303 08  0000 050c 0000  2388 		.d2locreg	%offsetof(.Llo68), %offsetof(.Llo69),3
  00000309 08  0510 0001 53         	
  0000030e 08  0000 0564 0000  2389 		.d2locreg	%offsetof(.Llo70), %offsetof(.Llo71),3
  00000314 08  0568 0001 53         	
  00000319 08  0000 056c 0000  2390 		.d2locreg	%offsetof(.Llo72), %offsetof(.Llo73),3
  0000031f 08  0570 0001 53         	
  00000324 08  0000 0000 0000  2391 		.d2locend
  0000032a 08  0000                 	
                               2392 	.L433:
  0000032c 08  0000 052c 0000  2393 		.d2locreg	%offsetof(.Llo74), %offsetof(.Llo75),3
  00000332 08  0554 0001 53         	
  00000337 08  0000 0000 0000  2394 		.d2locend
  0000033d 08  0000                 	
                               2395 	.L435:
  0000033f 08  0000 04ec 0000  2396 		.d2locreg	%offsetof(.Llo76), %offsetof(.Llo72),31
  00000345 08  056c 0001 6f         	
  0000034a 08  0000 0000 0000  2397 		.d2locend
  00000350 08  0000                 	
                               2398 	.L429:
  00000352 08  0000 0000 0000  2399 		.d2locend
  00000358 08  0000                 	
                               2400 		.wrcm.doc
                               2401 		.wrcm.elem
                               2402 		.wrcm.nelem "code"
                               2403 		.wrcm.nelem "functions"
                               2404 		.wrcm.nelem "s16DiagDsmAlNvMem_SetDtldRcTbl"
                               2405 		.wrcm.nint32 "frameSize", 32
                               2406 		.wrcm.nstrlist "calls", "__sp_grow_s","memcpy","s16NVM_WriteData","u32SSE_Crc32Dir"
                               2407 		.wrcm.end
                               2408 		.wrcm.nelem "s16DiagDsmAlNvMem_GetDtldRcTbl"
                               2409 		.wrcm.nint32 "frameSize", 32
                               2410 		.wrcm.nstrlist "calls", "__sp_grow_s","memcpy"
                               2411 		.wrcm.end
                               2412 		.wrcm.nelem "s16DiagDsmAlNvMem_GetSingleE"
                               2413 		.wrcm.nint32 "frameSize", 16
                               2414 		.wrcm.end
                               2415 		.wrcm.nelem "s16DiagDsmAlNvMem_UpdateSingleE"
                               2416 		.wrcm.nint32 "frameSize", 16
                               2417 		.wrcm.end
                               2418 		.wrcm.nelem "s16DiagDsmAlNvMem_GetSingleEntry"
                               2419 		.wrcm.nint32 "frameSize", 16
                               2420 		.wrcm.end
                               2421 		.wrcm.nelem "s16DiagDsmAlNvMem_GetNvMemBackupStatus"
                               2422 		.wrcm.nint32 "frameSize", 48
                               2423 		.wrcm.nstrlist "calls", "__sp_grow_s","u32SSE_Crc32Dir"
                               2424 		.wrcm.end
                               2425 		.wrcm.nelem "s16DiagDsmAlNvMem_UpdateSingleEntry"
                               2426 		.wrcm.nint32 "frameSize", 16
                               2427 		.wrcm.end
                               2428 		.wrcm.nelem "s16DiagDsmAlNvMem_FinishUpdate"
                               2429 		.wrcm.nint32 "frameSize", 32
                               2430 		.wrcm.nstrlist "calls", "__sp_grow_s","s16NVM_WriteData","u32SSE_Crc32Dir"
                               2431 		.wrcm.end
                               2432 		.wrcm.nelem "s16DiagDsmAlNvMem_StartUpdate"
                               2433 		.wrcm.nint32 "frameSize", 16
                               2434 		.wrcm.end
                               2435 		.wrcm.nelem "s16DiagDsmAlNvMem_init"
                               2436 		.wrcm.nint32 "frameSize", 32
                               2437 		.wrcm.nstrlist "calls", "__sp_grow_s","s16NVM_ReadData"
                               2438 		.wrcm.end
                               2439 		.wrcm.end
                               2440 		.wrcm.end
                               2441 		.wrcm.nelem "tools"
                               2442 		.wrcm.nelem "llopt"
                               2443 		.wrcm.nelem "version"
                               2444 		.wrcm.nstr "string", "5.9.3.0"
                               2445 		.wrcm.nint32 "number", 5930
                               2446 		.wrcm.nstr "path", "C:\KBApps\KB_SYS\Compiler\Windriver\diab\5.9.3.0\WIN32\bin\llopt
                                    	.exe"
                               2447 		.wrcm.nstr "label", "DIAB_5_9_3_0-FCS_20130829_231006"
                               2448 		.wrcm.end
                               2449 		.wrcm.end
                               2450 		.wrcm.nelem "ctoa"
                               2451 		.wrcm.nelem "version"
                               2452 		.wrcm.nstr "string", "5.9.3.0"
                               2453 		.wrcm.nint32 "number", 5930
                               2454 		.wrcm.nstr "path", "C:\KBApps\KB_SYS\Compiler\Windriver\diab\5.9.3.0\WIN32\lib\ctoa.
                                    	exe"
                               2455 		.wrcm.nstr "label", "DIAB_5_9_3_0-FCS_20130829_231006"
                               2456 		.wrcm.end
                               2457 		.wrcm.nstr "options", "-Xmake-opt-key=..\reloc\diagdsmnvmem.o -Xsingle-fp -Xuser-spe
                                    	cified-proc=PPC5554 -Xintc-eoir -XPPC5554 -Xintrinsic-mask=0xc00041 -Xstsw-slow -Xconvention
                                    	s-eabi -Xsmall-data=0 -Xsmall-const=0 -Xsoft-float -Xcoloring -Xkeywords=0xff0000 -Xapu-efpu
                                    	-v1 -Xefpu-spfsfv -Xtarget-family=2 -Xlicense-proxy-use -Xlicense-proxy-path=C:\KBApps\KB_SY
                                    	S\Compiler\WINDRI~1\diab\593~1.0\WIN32\lib -Xkeywords=0x4 -Xbss-common-off -Xlint=1 -Xstack-
                                    	probe -Xshow-configuration=1 -Xpass-source -Xmake-opt-key=..\reloc\diagdsmnvmem.o -MC:\KBApp
                                    	s\KB_SYS\Compiler\WINDRI~1\diab\593~1.0\PPC\PPC.cd -ZC:\KBApps\KB_SYS\Compiler\WINDRI~1\diab
                                    	\593~1.0\WIN32\lib\cderror.cat -Xsingle-fp -Xuser-specified-proc=PPC5554 -Xintc-eoir -XPPC55
                                    	54 -Xintrinsic-mask=0xc00041 -Xstsw-slow -Xconventions-eabi -Xsmall-data=0 -Xsmall-const=0 -
                                    	Xsoft-float -Xcoloring -Xkeywords=0xff0000 -Xapu-efpu-v1 -Xefpu-spfsfv -Xtarget-family=2 -Xl
                                    	icense-proxy-use -Xlicense-proxy-path=C:\KBApps\KB_SYS\Compiler\WINDRI~1\diab\593~1.0\WIN32\
                                    	lib -g3 -Xkeywords=0x4 -Xbss-common-off -Xlint=1 -Xstack-probe -Xshow-configuration=1 -Xpass
                                    	-source -YC:\KBApps\KB_SYS\Compiler\WINDRI~1\diab\593~1.0\include\cpp/std:C:\KBApps\KB_SYS\C
                                    	ompiler\WINDRI~1\diab\593~1.0\include\cpp:C:\KBApps\KB_SYS\Compiler\WINDRI~1\diab\593~1.0\in
                                    	clude\simple:C:\KBApps\KB_SYS\Compiler\WINDRI~1\diab\593~1.0\include -D__softfp -D__EVEC__=8
                                    	1402 -D__softfp_abi -D__SPE__=1 -D__EABI__ -D__BIG_ENDIAN__ -D__NO_SDATA__ -D__ppc -D_SUPPOR
                                    	TS_BUILTIN_PREFETCH -D__CONFIGURE_EMBEDDED=0 -D__CONFIGURE_EXCEPTIONS=1 -D_DIAB_TOOL -D_SUPP
                                    	ORTS_BUILTIN_EXPECT -D__MM_PROCESSOR=kb_PPC -DNDEBUG -I..\include -I..\..\mwl01.int\include 
                                    	-I..\..\..\..\eLAD0x\hal\ecal01.int\include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\GenCA\com
                                    	mon.int\include -I..\..\..\..\GenMPC55xx\GenCA_FWK\code\mwl\mwl01.int\include -I..\..\..\..\
                                    	GenMPC55xx\GenMPC55xxCCA\common.int\include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\Genrl\com
                                    	mon.int\include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\hal\mcal01\Include -I..\..\..\..\GenM
                                    	PC55xx\GenMPC55xxCCA\hal\mcal01.int\Include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\svl4g\xos
                                    	01.int\include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\svl4g\xos01.int\include\sciopta -I..\.
                                    	.\..\..\GenMPC55xx\GenMPC55xxCCA\GenCA\svl4g\bsw01\include -I..\..\..\..\GenMPC55xx\GenMPC55
                                    	xxCCA\GenCA\svl4g\bsw01.int\include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\GenCA\hal\ecal01.
                                    	int\include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\svl4g\bsw01\include -I..\..\..\..\GenMPC5
                                    	5xx\GenMPC55xxCCA\svl4g\bsw01.int\include -I..\..\..\..\GenMPC55xx\GenMPC55xxCCA\hal\ecal01.
                                    	int\include -I..\..\..\..\eLAD0x\svl4g\bsw01.int\include -I..\..\..\..\eLAD0x\mwl\mwl01.int\
                                    	include -I..\..\..\..\LAD_CPU04\svl4g\bsw01.int\include -I..\..\..\..\FWK\deployment\lad -I.
                                    	.\..\..\..\FWK\deployment\lad\impl -I..\..\..\..\CoFwk\Deployment -IC:\KBApps\KB_SYS\Compile
                                    	r\Windriver\diab\5.9.3.0\include"
                               2458 		.wrcm.end
                               2459 		.wrcm.end
                               2460 		.wrcm.nelem "file"
                               2461 		.wrcm.nstr "input", "..\source\diagdsmnvmem.c"
                               2462 		.wrcm.end
                               2463 		.wrcm.end
  00000000 09                  2464 		.wrcm.end
